{  
  "paragraphs":[  
    {  
      "text":"%md\n## Load datasource into a flink datastream",
      "dateUpdated":"2017-03-19T19:26:31+0000",
      "config":{  
        "colWidth":12,
        "editorMode":"ace/mode/markdown",
        "editorHide":true,
        "graph":{  
          "mode":"table",
          "height":300,
          "optionOpen":false,
          "keys":[  

          ],
          "values":[  

          ],
          "groups":[  

          ],
          "scatter":{  

          }
        },
        "enabled":true
      },
      "settings":{  
        "params":{  

        },
        "forms":{  

        }
      },
      "jobName":"paragraph_1489233868637_-2029725289",
      "id":"20160819-094810_981063233",
      "result":{  
        "code":"SUCCESS",
        "type":"HTML",
        "msg":"<h2>Load datasource into a flink datastream</h2>\n"
      },
      "dateCreated":"2017-03-11T12:04:28+0000",
      "dateStarted":"2017-03-19T19:26:31+0000",
      "dateFinished":"2017-03-19T19:26:31+0000",
      "status":"FINISHED",
      "progressUpdateIntervalMs":500,
      "$$hashKey":"object:264"
    },
    {  
      "text":"%angular   \n<style>\nbody {\n    padding-top: 30px  !important;\n   \n}\n</style>",
      "dateUpdated":"2017-03-19T19:26:31+0000",
      "config":{  
        "colWidth":12,
        "graph":{  
          "mode":"table",
          "height":300,
          "optionOpen":false,
          "keys":[  

          ],
          "values":[  

          ],
          "groups":[  

          ],
          "scatter":{  

          }
        },
        "enabled":true,
        "editorMode":"ace/mode/html"
      },
      "settings":{  
        "params":{  

        },
        "forms":{  

        }
      },
      "jobName":"paragraph_1489744524910_-646335235",
      "id":"20170317-095524_633979447",
      "result":{  
        "code":"SUCCESS",
        "type":"ANGULAR",
        "msg":"<style>\nbody {\n    padding-top: 30px  !important;\n   \n}\n</style>"
      },
      "dateCreated":"2017-03-17T09:55:24+0000",
      "dateStarted":"2017-03-19T19:26:31+0000",
      "dateFinished":"2017-03-19T19:26:31+0000",
      "status":"FINISHED",
      "progressUpdateIntervalMs":500,
      "$$hashKey":"object:265"
    },
    {  
      "text":"%sh\nif [ ! -f debs2013.data ]; then\n    echo \"File not found!\"\n    wget https://s3-eu-west-1.amazonaws.com/debs2013/+debs2013.data\nelse \n    echo \"File is there\"\nfi",
      "dateUpdated":"2017-03-19T19:26:31+0000",
      "config":{  
        "colWidth":12,
        "editorMode":"ace/mode/sh",
        "editorHide":false,
        "graph":{  
          "mode":"table",
          "height":300,
          "optionOpen":false,
          "keys":[  

          ],
          "values":[  

          ],
          "groups":[  

          ],
          "scatter":{  

          }
        },
        "enabled":false
      },
      "settings":{  
        "params":{  

        },
        "forms":{  

        }
      },
      "jobName":"paragraph_1489233868637_-2029725289",
      "id":"20160811-172700_1889671",
      "dateCreated":"2017-03-11T12:04:28+0000",
      "status":"READY",
      "errorMessage":"",
      "progressUpdateIntervalMs":500,
      "$$hashKey":"object:266"
    },
    {  
      "text":"%flink\nimport org.apache.flink.streaming.api.functions.source._;\nimport org.apache.flink.streaming.api.functions.source.SourceFunction.SourceContext;\nimport scala.io.Source\nimport org.apache.flink.streaming.api.TimeCharacteristic\nimport org.apache.flink.streaming.api.functions._\nimport org.apache.flink.streaming.api.watermark._\n\nclass FileSource extends RichSourceFunction[String]() with StoppableFunction{\n    var startSystemTime = System.nanoTime();\n    var startDataTime = 10753295594424116L;\n    var stoped = false;\n    \n    def shiftIterator(fileIterator : Iterator[String] ): Unit = {\n        \n        var line = fileIterator.next()\n        var lineDataTimestamp = line.split(\",\")(1).toLong;\n        \n        while(lineDataTimestamp<=startDataTime){\n            line = fileIterator.next()\n            lineDataTimestamp = line.split(\",\")(1).toLong;\n        }\n    }\n    \n    def run(sc: SourceContext[String]): Unit = {\n        var fileIterator = scala.tools.nsc.io.File(\"debs2013.data\").lines();\n        \n        shiftIterator(fileIterator) \n        startSystemTime = System.nanoTime();\n        \n        for(line <-scala.tools.nsc.io.File(\"debs2013.data\").lines()){\n            \n            if(Thread.interrupted() || stoped){\n                return\n            }\n            var dataTimestamp = line.split(\",\")(1).toLong;\n            if(dataTimestamp > startDataTime){\n                var elapsedSystemTime = System.nanoTime() - startSystemTime;\n                var elapsedDataTime = (dataTimestamp - startDataTime) / 1000; // picoseconds to nanoseconds\n                while(elapsedDataTime > elapsedSystemTime && !Thread.interrupted()){\n                    elapsedSystemTime = System.nanoTime() - startSystemTime;\n                    // active waiting for time\n                } \n                sc.collect(line);\n            }\n        }\n    }\n    \n    def stop() : Unit= {\n        stoped = true \n    }\n    \n    def cancel() : Unit= {\n        stoped = true \n    }\n\n}\n\nvar fs = new FileSource()\n\n\n\n",
      "dateUpdated":"2017-03-19T19:26:32+0000",
      "config":{  
        "colWidth":12,
        "editorMode":"ace/mode/scala",
        "editorHide":false,
        "graph":{  
          "mode":"table",
          "height":300,
          "optionOpen":false,
          "keys":[  

          ],
          "values":[  

          ],
          "groups":[  

          ],
          "scatter":{  

          }
        },
        "enabled":true
      },
      "settings":{  
        "params":{  

        },
        "forms":{  

        }
      },
      "jobName":"paragraph_1489233868637_-2029725289",
      "id":"20160811-173150_1383375754",
      "result":{  
        "code":"SUCCESS",
        "type":"TEXT",
        "msg":"import org.apache.flink.streaming.api.functions.source._\nimport org.apache.flink.streaming.api.functions.source.SourceFunction.SourceContext\nimport scala.io.Source\nimport org.apache.flink.streaming.api.TimeCharacteristic\nimport org.apache.flink.streaming.api.functions._\nimport org.apache.flink.streaming.api.watermark._\ndefined class FileSource\nfs: FileSource = $$$$4b64a474beb3955de5f16ae6a24b480$$$FileSource@3261ca5\n"
      },
      "dateCreated":"2017-03-11T12:04:28+0000",
      "dateStarted":"2017-03-19T19:26:32+0000",
      "dateFinished":"2017-03-19T19:26:36+0000",
      "status":"FINISHED",
      "progressUpdateIntervalMs":500,
      "$$hashKey":"object:267"
    },
    {  
      "text":"%md \n## Map the string data stream items into a DebsDataItem stream. ",
      "dateUpdated":"2017-03-19T19:26:32+0000",
      "config":{  
        "colWidth":12,
        "editorMode":"ace/mode/markdown",
        "editorHide":true,
        "graph":{  
          "mode":"table",
          "height":300,
          "optionOpen":false,
          "keys":[  

          ],
          "values":[  

          ],
          "groups":[  

          ],
          "scatter":{  

          }
        },
        "enabled":true
      },
      "settings":{  
        "params":{  

        },
        "forms":{  

        }
      },
      "jobName":"paragraph_1489233868637_-2029725289",
      "id":"20160819-095156_1866848755",
      "result":{  
        "code":"SUCCESS",
        "type":"HTML",
        "msg":"<h2>Map the string data stream items into a DebsDataItem stream.</h2>\n"
      },
      "dateCreated":"2017-03-11T12:04:28+0000",
      "dateStarted":"2017-03-19T19:26:32+0000",
      "dateFinished":"2017-03-19T19:26:32+0000",
      "status":"FINISHED",
      "progressUpdateIntervalMs":500,
      "$$hashKey":"object:268"
    },
    {  
      "text":"%flink\n/**\n * sid, ts, \n * x, y, z, \n * |v| in μm/s,\n * |a| is zero when the ball is at a fixed position and not 9.81 m/s²).\n * vx, vy, vz, describe direction by a vector with size of 10,000\n * ax, ay, az\n * \n * \n * Hence, the speed of the object in x-direction in SI-units (m/s) is calculated by \n *          v'x = |v| * vx * 1e-4 * 1e-6\n * \n */\n\ncase class DebsDataItem(sid:Int, ts:Long, x:Int, y:Int, z:Int, v:Int, a:Int , vx:Int, vy:Int, vz:Int, ax:Int, ay:Int, az:Int )\n\nvar debs2013DataStream = senv.addSource(fs)\n\nvar debsItemDataStreamWithoutTime = debs2013DataStream.map(line=>{\n    val items = line.split(\",\")\n    DebsDataItem(\n        items(0).toInt,\n        items(1).toLong,\n        items(2).toInt,\n        items(3).toInt,\n        items(4).toInt,\n        items(5).toInt,\n        items(6).toInt,\n        items(7).toInt,\n        items(8).toInt,\n        items(9).toInt,\n        items(10).toInt,\n        items(11).toInt,\n        items(12).toInt\n        )\n})",
      "dateUpdated":"2017-03-19T19:26:32+0000",
      "config":{  
        "colWidth":12,
        "editorMode":"ace/mode/scala",
        "editorHide":false,
        "graph":{  
          "mode":"table",
          "height":300,
          "optionOpen":false,
          "keys":[  

          ],
          "values":[  

          ],
          "groups":[  

          ],
          "scatter":{  

          }
        },
        "enabled":true
      },
      "settings":{  
        "params":{  

        },
        "forms":{  

        }
      },
      "jobName":"paragraph_1489233868637_-2029725289",
      "id":"20160810-184841_159248738",
      "result":{  
        "code":"SUCCESS",
        "type":"TEXT",
        "msg":"defined class DebsDataItem\ndebs2013DataStream: org.apache.flink.streaming.api.scala.DataStream[String] = org.apache.flink.streaming.api.scala.DataStream@7fd19f15\ndebsItemDataStreamWithoutTime: org.apache.flink.streaming.api.scala.DataStream[DebsDataItem] = org.apache.flink.streaming.api.scala.DataStream@2f73e386\n"
      },
      "dateCreated":"2017-03-11T12:04:28+0000",
      "dateStarted":"2017-03-19T19:26:33+0000",
      "dateFinished":"2017-03-19T19:26:39+0000",
      "status":"FINISHED",
      "progressUpdateIntervalMs":500,
      "$$hashKey":"object:269"
    },
    {  
      "text":"%md\n### assingn timestamp as eventtime",
      "dateUpdated":"2017-03-19T19:26:33+0000",
      "config":{  
        "colWidth":12,
        "editorMode":"ace/mode/markdown",
        "editorHide":true,
        "graph":{  
          "mode":"table",
          "height":300,
          "optionOpen":false,
          "keys":[  

          ],
          "values":[  

          ],
          "groups":[  

          ],
          "scatter":{  

          }
        },
        "enabled":true
      },
      "settings":{  
        "params":{  

        },
        "forms":{  

        }
      },
      "jobName":"paragraph_1489233868637_-2029725289",
      "id":"20160913-174500_974120697",
      "result":{  
        "code":"SUCCESS",
        "type":"HTML",
        "msg":"<h3>assingn timestamp as eventtime</h3>\n"
      },
      "dateCreated":"2017-03-11T12:04:28+0000",
      "dateStarted":"2017-03-19T19:26:33+0000",
      "dateFinished":"2017-03-19T19:26:33+0000",
      "status":"FINISHED",
      "progressUpdateIntervalMs":500,
      "$$hashKey":"object:270"
    },
    {  
      "text":"%flink\nimport org.apache.flink.streaming.api.TimeCharacteristic\nimport org.apache.flink.streaming.api.functions._\nimport org.apache.flink.streaming.api.watermark._\nsenv.setStreamTimeCharacteristic(TimeCharacteristic.EventTime);\n\n\n// Assign Event timestemp\nclass DebsTimestampAssigner extends AssignerWithPunctuatedWatermarks[DebsDataItem](){\n\n    def\textractTimestamp(element:DebsDataItem, previousElementTimestamp:Long):Long = {\n        val ms = element.ts / 1000000000L; // The timestamp profided by the dataset is in picoseconds, so we neet to convert it in milliseconds. \n        ms\n    }\n    \n    def  checkAndGetNextWatermark( lastElement: DebsDataItem,  extractedTimestamp: Long): Watermark = {\n        // return the watermark as current time minus the maximum time lag\n\t\treturn new Watermark(extractedTimestamp);\n    }\n}\n  \nvar debsItemDataStream = debsItemDataStreamWithoutTime.setParallelism(1).assignTimestampsAndWatermarks(new DebsTimestampAssigner());",
      "dateUpdated":"2017-03-19T19:26:33+0000",
      "config":{  
        "colWidth":12,
        "editorMode":"ace/mode/scala",
        "graph":{  
          "mode":"table",
          "height":300,
          "optionOpen":false,
          "keys":[  

          ],
          "values":[  

          ],
          "groups":[  

          ],
          "scatter":{  

          }
        },
        "enabled":true
      },
      "settings":{  
        "params":{  

        },
        "forms":{  

        }
      },
      "jobName":"paragraph_1489233868638_-2028571042",
      "id":"20160913-174539_6831408",
      "result":{  
        "code":"SUCCESS",
        "type":"TEXT",
        "msg":"import org.apache.flink.streaming.api.TimeCharacteristic\nimport org.apache.flink.streaming.api.functions._\nimport org.apache.flink.streaming.api.watermark._\ndefined class DebsTimestampAssigner\ndebsItemDataStream: org.apache.flink.streaming.api.scala.DataStream[DebsDataItem] = org.apache.flink.streaming.api.scala.DataStream@6ffc4aad\n"
      },
      "dateCreated":"2017-03-11T12:04:28+0000",
      "dateStarted":"2017-03-19T19:26:37+0000",
      "dateFinished":"2017-03-19T19:26:44+0000",
      "status":"FINISHED",
      "progressUpdateIntervalMs":500,
      "$$hashKey":"object:271"
    },
    {  
      "text":"%md \n## Ui Elements\n",
      "dateUpdated":"2017-03-19T19:26:33+0000",
      "config":{  
        "colWidth":12,
        "editorMode":"ace/mode/markdown",
        "editorHide":true,
        "graph":{  
          "mode":"table",
          "height":300,
          "optionOpen":false,
          "keys":[  

          ],
          "values":[  

          ],
          "groups":[  

          ],
          "scatter":{  

          }
        },
        "enabled":true
      },
      "settings":{  
        "params":{  

        },
        "forms":{  

        }
      },
      "jobName":"paragraph_1489233868638_-2028571042",
      "id":"20160819-095245_1704675442",
      "result":{  
        "code":"SUCCESS",
        "type":"HTML",
        "msg":"<h2>Ui Elements</h2>\n"
      },
      "dateCreated":"2017-03-11T12:04:28+0000",
      "dateStarted":"2017-03-19T19:26:34+0000",
      "dateFinished":"2017-03-19T19:26:34+0000",
      "status":"FINISHED",
      "progressUpdateIntervalMs":500,
      "$$hashKey":"object:272"
    },
    {  
      "text":"%md \n### Implementation of the player selection ui",
      "dateUpdated":"2017-03-19T19:26:34+0000",
      "config":{  
        "colWidth":12,
        "editorMode":"ace/mode/markdown",
        "editorHide":true,
        "graph":{  
          "mode":"table",
          "height":300,
          "optionOpen":false,
          "keys":[  

          ],
          "values":[  

          ],
          "groups":[  

          ],
          "scatter":{  

          }
        },
        "enabled":true
      },
      "settings":{  
        "params":{  

        },
        "forms":{  

        }
      },
      "jobName":"paragraph_1489233868638_-2028571042",
      "id":"20160829-093254_1180276378",
      "result":{  
        "code":"SUCCESS",
        "type":"HTML",
        "msg":"<h3>Implementation of the player selection ui</h3>\n"
      },
      "dateCreated":"2017-03-11T12:04:28+0000",
      "dateStarted":"2017-03-19T19:26:34+0000",
      "dateFinished":"2017-03-19T19:26:34+0000",
      "status":"FINISHED",
      "progressUpdateIntervalMs":500,
      "$$hashKey":"object:273"
    },
    {  
      "text":"%angular  \n\n<style>\n    i2-player-button{\n        display: block;\n    }\n    \n    i2-player-button div{\n        margin: 5px;\n    }\n    \n    .selected\n    {\n            box-shadow: 0px 0px 5px rgba(16, 187, 53, 0.99);\n    }\n</style>\n<script>\nzeppelin.addComponent(\n    \"i2PlayerButton\",\n    \"<div class='col-md-3'>\" +\n    \"<div ng-repeat='player in players' ng-class='{selected: isSelected(player)}' class='btn btn-default' ng-click='selectPlayer(player)' ng-disabled='!manual && !isSelected(player)'>{{player.name}}</div>\"+\n    \"</div>\",\n    function(scope,element){\n       scope.manual = true;\n       scope.players = [\n           {name:\"Nick Gertje\",sid:[13,14]},\n           {name:\"Dennis Dotterweich\",sid:[47,16]},\n           {name:\"Niklas Waelzlein\",sid:[49,88]},\n           {name:\"Wili Sommer\",sid:[19,52]},\n           {name:\"Philipp Harlass\",sid:[53,54]},\n           {name:\"Roman Hartleb\",sid:[23,24]},\n           {name:\"Erik Engelhardt\",sid:[57,58]},\n           {name:\"Sandro Schneider\",sid:[29,28]},\n           {name:\"Leon Krapf\",sid:[61,62]},\n           {name:\"Kevin Baer\",sid:[63,64]},\n           {name:\"Luca Ziegler\",sid:[65,66]},\n           {name:\"Ben Mueller\",sid:[67,68]},\n           {name:\"Vale Reitstetter\",sid:[69,38]},\n           {name:\"Christopher Lee\",sid:[71,40]},\n           {name:\"Leon Heinze\",sid:[73,74]},\n           {name:\"Leo Langhans\",sid:[75,44]}];  \n    \n        scope.selectedSensorLocal = 13;\n        scope.isSelected = function(player){\n            var index = _.indexOf(player.sid, scope.selectedSensorLocal)\n            return index != -1;\n        }\n        scope.$watch(\"selectedSensor\",function(old,newItem){\n            if(!scope.manual){\n                scope.selectedSensorLocal = newItem;\n            }\n        })\n       \n        scope.selectPlayer = function(player){\n           console.log(\"select \" + player.sid)    \n           scope.selectedSensorLocal = player.sid[0];\n        }\n        \n        \n})\n</script>",
      "dateUpdated":"2017-03-19T19:26:34+0000",
      "config":{  
        "colWidth":6,
        "editorMode":"ace/mode/html",
        "editorHide":false,
        "graph":{  
          "mode":"table",
          "height":300,
          "optionOpen":false,
          "keys":[  

          ],
          "values":[  

          ],
          "groups":[  

          ],
          "scatter":{  

          }
        },
        "enabled":true
      },
      "settings":{  
        "params":{  

        },
        "forms":{  

        }
      },
      "jobName":"paragraph_1489233868638_-2028571042",
      "id":"20160810-181856_1882651917",
      "result":{  
        "code":"SUCCESS",
        "type":"ANGULAR",
        "msg":"<style>\n    i2-player-button{\n        display: block;\n    }\n    \n    i2-player-button div{\n        margin: 5px;\n    }\n    \n    .selected\n    {\n            box-shadow: 0px 0px 5px rgba(16, 187, 53, 0.99);\n    }\n</style>\n<script>\nzeppelin.addComponent(\n    \"i2PlayerButton\",\n    \"<div class='col-md-3'>\" +\n    \"<div ng-repeat='player in players' ng-class='{selected: isSelected(player)}' class='btn btn-default' ng-click='selectPlayer(player)' ng-disabled='!manual && !isSelected(player)'>{{player.name}}</div>\"+\n    \"</div>\",\n    function(scope,element){\n       scope.manual = true;\n       scope.players = [\n           {name:\"Nick Gertje\",sid:[13,14]},\n           {name:\"Dennis Dotterweich\",sid:[47,16]},\n           {name:\"Niklas Waelzlein\",sid:[49,88]},\n           {name:\"Wili Sommer\",sid:[19,52]},\n           {name:\"Philipp Harlass\",sid:[53,54]},\n           {name:\"Roman Hartleb\",sid:[23,24]},\n           {name:\"Erik Engelhardt\",sid:[57,58]},\n           {name:\"Sandro Schneider\",sid:[29,28]},\n           {name:\"Leon Krapf\",sid:[61,62]},\n           {name:\"Kevin Baer\",sid:[63,64]},\n           {name:\"Luca Ziegler\",sid:[65,66]},\n           {name:\"Ben Mueller\",sid:[67,68]},\n           {name:\"Vale Reitstetter\",sid:[69,38]},\n           {name:\"Christopher Lee\",sid:[71,40]},\n           {name:\"Leon Heinze\",sid:[73,74]},\n           {name:\"Leo Langhans\",sid:[75,44]}];  \n    \n        scope.selectedSensorLocal = 13;\n        scope.isSelected = function(player){\n            var index = _.indexOf(player.sid, scope.selectedSensorLocal)\n            return index != -1;\n        }\n        scope.$watch(\"selectedSensor\",function(old,newItem){\n            if(!scope.manual){\n                scope.selectedSensorLocal = newItem;\n            }\n        })\n       \n        scope.selectPlayer = function(player){\n           console.log(\"select \" + player.sid)    \n           scope.selectedSensorLocal = player.sid[0];\n        }\n        \n        \n})\n</script>"
      },
      "dateCreated":"2017-03-11T12:04:28+0000",
      "dateStarted":"2017-03-19T19:26:35+0000",
      "dateFinished":"2017-03-19T19:26:35+0000",
      "status":"FINISHED",
      "progressUpdateIntervalMs":500,
      "$$hashKey":"object:274"
    },
    {  
      "text":"%flink\nimport org.apache.zeppelin.flink.ui._;\nclass PlayerUi() extends UIComponent[Int,Int](classOf[Int]) {\n    var manual_player_selection = true;\n    logger.info(\"Start PlayerUi\");\n    scope.remove(\"selectedSensor\")\n    scope.remove(\"selectedSensorLocal\")\n    scope.remove(\"manual\")\n    scope.put(\"selectedSensor\" , 13);\n    scope.put(\"selectedSensorLocal\" , 13);\n    scope.put(\"manual\" , manual_player_selection);\n    scope.watch(\"selectedSensorLocal\",(_:Int,newValue:Int)=>{\n        logger.info(\"Update\"+ newValue);\n        addMessageToOutputStream(newValue)\n    })\n    \n    scope.watch(\"manual\",(_:Boolean,newValue:Boolean)=>{\n        \n        this.manual_player_selection = newValue;\n    })\n   \n   override def  invoke(item:Int): Unit = {\n       if(!this.manual_player_selection){\n        println(\"invoke\" + item)  \n        logger.info(\"invoke\"+ item);\n        scope.put(\"selectedSensor\" , item);\n       }\n   }\n   \n   def getTemplate(): String = {\n       \"<i2-player-button></i2-player-button>\"\n   }\n}  \n  \n\n\n\n\n",
      "dateUpdated":"2017-03-19T19:26:35+0000",
      "config":{  
        "colWidth":6,
        "editorMode":"ace/mode/scala",
        "editorHide":false,
        "graph":{  
          "mode":"table",
          "height":300,
          "optionOpen":false,
          "keys":[  

          ],
          "values":[  

          ],
          "groups":[  

          ],
          "scatter":{  

          }
        },
        "enabled":true
      },
      "settings":{  
        "params":{  

        },
        "forms":{  

        }
      },
      "jobName":"paragraph_1489233868638_-2028571042",
      "id":"20160810-181909_1451672004",
      "result":{  
        "code":"SUCCESS",
        "type":"TEXT",
        "msg":"import org.apache.zeppelin.flink.ui._\ndefined class PlayerUi\n"
      },
      "dateCreated":"2017-03-11T12:04:28+0000",
      "dateStarted":"2017-03-19T19:26:40+0000",
      "dateFinished":"2017-03-19T19:26:47+0000",
      "status":"FINISHED",
      "progressUpdateIntervalMs":500,
      "$$hashKey":"object:275"
    },
    {  
      "text":"%md \n### Implementation of the football field",
      "dateUpdated":"2017-03-19T19:26:35+0000",
      "config":{  
        "colWidth":12,
        "editorMode":"ace/mode/markdown",
        "editorHide":true,
        "graph":{  
          "mode":"table",
          "height":300,
          "optionOpen":false,
          "keys":[  

          ],
          "values":[  

          ],
          "groups":[  

          ],
          "scatter":{  

          }
        },
        "enabled":true
      },
      "settings":{  
        "params":{  

        },
        "forms":{  

        }
      },
      "jobName":"paragraph_1489233868638_-2028571042",
      "id":"20160819-095333_1233897701",
      "result":{  
        "code":"SUCCESS",
        "type":"HTML",
        "msg":"<h3>Implementation of the football field</h3>\n"
      },
      "dateCreated":"2017-03-11T12:04:28+0000",
      "dateStarted":"2017-03-19T19:26:36+0000",
      "dateFinished":"2017-03-19T19:26:36+0000",
      "status":"FINISHED",
      "progressUpdateIntervalMs":500,
      "$$hashKey":"object:276"
    },
    {  
      "text":"%angular   \n\n<style>\n    .line {\n        fill: none;\n        stroke: #000;\n        stroke-width: 1.5px;\n    }\n    .block{\n        height: 300px;\n        display: block;\n    }\n</style>\n\n<script>\nzeppelin.addComponent(\n    \"i2FootballField\",\n    \"<?xml version='1.0' standalone='no?'>\"+ \n\"<!DOCTYPE svg PUBLIC '-//W3C//DTD SVG 1.1//EN' \"+ \n  \"'http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd'>\"+ \n  \"<svg width='1268px' height='808px' viewBox='0 0 1150 720' stroke='white' version='1.1'\"+\n\"     xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'>\"+\n\"    <rect x='0' y='0' width='1150' height='720' fill='green' />\"+\n\"    <path d='M 575,20 L 50,20 50,700 1100,700 1100,20 575,20 575,700 z' stroke='white' stroke-width='3' fill='green' />\"+\n\"    <circle cx='575' cy='360' r='91.5' stroke='white' stroke-width='3' fill-opacity='0' />\"+\n\"    <circle cx='575' cy='360' r='2' stroke='white' fill='white' />\"+\n\"    <circle cx='160' cy='360' r='2' stroke='white' fill='white' />\"+\n\"    <circle cx='990' cy='360' r='2' stroke='white' fill='white' />\"+\n\"    <path d='M 50,324.4 L 40,324.4 40, 396.6 50 396.6 z' stroke='white' stroke-width='3' fill-opacity='0' />\"+\n\"    <path d='M 1100,324.4 L 1110,324.4 1110,396.6 1100,396.6 z' stroke='white' stroke-width='3' fill-opacity='0' />\"+\n\"    <path d='M 50,269.4 L 105,269.4 105,451.6 50 451.6 z' stroke='white' stroke-width='3' fill-opacity='0' />\"+\n\"    <path d='M 1100,269.4 L 1045,269.4 1045,451.6 1100,451.6 z' stroke='white' stroke-width='3' fill-opacity='0' />\"+\n\"    <path d='M 50,159.4 L 215,159.4 215,561.6 50 561.6 z' stroke='white' stroke-width='3' fill-opacity='0' />\"+\n\"    <path d='M 1100,159.4 L 935,159.4 935,561.6 1100,561.6 z' stroke='white' stroke-width='3' fill-opacity='0' />\"+\n\"    <path d='M 215,286.875 A 91.5,91.5 0 0,1 215,433.125 z' stroke='white' stroke-width='3' fill='green' />\"+\n\"    <path d='M 935,286.875 A 91.5,91.5 0 0,0 935,433.125 z' stroke='white' stroke-width='3' fill='green' />\"+\n\"    <path d='M 50,30 A 10,10 0 0,0 60,20 L 50,20 z' stroke='white' stroke-width='3' fill-opacity='0' />\"+\n\"    <path d='M 60,700 A 10,10 0 0,0 50,690 L 50,700 z' stroke='white' stroke-width='3' fill-opacity='0' />\"+\n\"    <path d='M 1100,690 A 10,10 0 0,0 1090,700 L 1100,700 z' stroke='white' stroke-width='3' fill-opacity='0' />\"+\n\"    <path d='M 1090,20 A 10,10 0 0,0 1100,30 L 1100,20 z' stroke='white' stroke-width='3' fill-opacity='0' />\"+\n\"</svg>\", \n    function(scope, element) {\n       \n        element.addClass('block');\n        \n        var points = []\n        \n        var scale = 0.7;\n        var dataTopLeftX = 0;\n        var dataWidth = 52489;\n        var dataTopLeftY = -33960;\n        var dataHeight = 67930;\n\n        viewHeight = 690;\n        viewWidth = 1050;\n    \n        var svg = d3.select($(element).children(\"svg\")[0])\n        \n        var sidsTeamA = [13,14,97,98,47,16,49,88,19,52,53,54,23,24,57,58,59,28]\n        var sidsTeamB = [61,62,99,100,63,64,65,66,67,68,69,38,71,40,73,74,75,44]\n        var sensorGroups = [ [13,14,97,98],  [47,16], [49,88], [19,52],    [53,54],  [23,24],\n          [57,58],  [59,28], [61,62,99,100],    [63,64],  [65,66],    [67,68],  [69,38],   [71,40], [73,74],[75,44]];\n        function unitsPerPixel() {\n            return {\n                width: dataHeight / viewWidth,\n                height: dataWidth / viewHeight\n            }\n        }\n\n        function mapPoint(point) {\n            var unitPerPixcel = unitsPerPixel()\n            return {\n                y: ((point.x) / unitPerPixcel.height)+15,\n                x: ((point.y + 33960) / unitPerPixcel.width ) +50,\n            }\n        }\n        \n        var requested = false;\n        \n        function addPoint(point) {\n            var cordinates = mapPoint(point);\n            var id = point.id;\n            if(points[id] == undefined)\n                points[id] = point\n             points[id].cordinates = cordinates;\n             points[id].selected = point.selected\n        }\n        \n     \n        \n        var stop = false;\n        function draw() {\n          \n          for(var i = 0; i<points.length;i++){\n            if(points[i] != undefined){\n                var point = points[i];\n                if(point.svg == undefined){\n                    point.svg = svg.append(\"circle\")\n                                .attr(\"r\", 10)\n                                .attr(\"id\", i)\n                                \n                }\n                point.svg\n                        .attr(\"cx\", point.cordinates.x)\n                        .attr(\"cy\", point.cordinates.y)\n                        .style(\"fill\", getColor(point));\n            }\n          }\n        }\n        \n        function isBallEvent(point){\n            return point.id==4 || point.id==8 || point.id==10 || point.id== 12;\n        }\n        \n        function isSelected(event){\n            return event.selected ||currentGroup.indexOf(event.id)!=-1;\n        }\n        \n        function isTeamA(event){\n            return  sidsTeamA.indexOf(event.id)!=-1;\n        }\n         function isTeamB(event){\n            return  sidsTeamB.indexOf(event.id)!=-1;\n        }\n        \n        function getColor(event){\n            if(isBallEvent(event)){\n                return \"white\"\n            }\n            else if(isSelected(event)){\n                console.log(event.id)\n                return \"red\";\n            }\n            else if(isTeamA(event)){\n                 return \"blue\"\n            }else if(isTeamB(event)){\n                 return \"orange\"\n            }\n            else{\n                return \"black\"\n            }\n        }\n        \n        var currentGroup = sensorGroups[0];\n       \n        var init = false;\n        var remove = scope.$watch('point2', function(newPoinsts, oldValue) {\n            //console.log(newPoinsts)\n            if(newPoinsts!=undefined)\n                newPoinsts.forEach(function(newPoinst){\n                    if(newPoinst._4){\n                        currentGroup= sensorGroups.find(function(group){return group.indexOf(newPoinst._1)!=-1})\n                    }\n                    addPoint({id:newPoinst._1,x:newPoinst._2,y:newPoinst._3,selected:newPoinst._4})\n                })\n             window.requestAnimationFrame(draw); \n        });\n        \n        scope.$on('clean', function() {\n            remove()\n            stop = true;\n        });\n       \n    })\n</script>\n",
      "dateUpdated":"2017-03-19T19:26:36+0000",
      "config":{  
        "lineNumbers":false,
        "colWidth":6,
        "editorMode":"ace/mode/html",
        "editorHide":false,
        "graph":{  
          "mode":"table",
          "height":300,
          "optionOpen":false,
          "keys":[  

          ],
          "values":[  

          ],
          "groups":[  

          ],
          "scatter":{  

          }
        },
        "enabled":true
      },
      "settings":{  
        "params":{  

        },
        "forms":{  

        }
      },
      "jobName":"paragraph_1489233868638_-2028571042",
      "id":"20160810-190348_1037428157",
      "result":{  
        "code":"SUCCESS",
        "type":"ANGULAR",
        "msg":"<style>\n    .line {\n        fill: none;\n        stroke: #000;\n        stroke-width: 1.5px;\n    }\n    .block{\n        height: 300px;\n        display: block;\n    }\n</style>\n\n<script>\nzeppelin.addComponent(\n    \"i2FootballField\",\n    \"<?xml version='1.0' standalone='no?'>\"+ \n\"<!DOCTYPE svg PUBLIC '-//W3C//DTD SVG 1.1//EN' \"+ \n  \"'http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd'>\"+ \n  \"<svg width='1268px' height='808px' viewBox='0 0 1150 720' stroke='white' version='1.1'\"+\n\"     xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'>\"+\n\"    <rect x='0' y='0' width='1150' height='720' fill='green' />\"+\n\"    <path d='M 575,20 L 50,20 50,700 1100,700 1100,20 575,20 575,700 z' stroke='white' stroke-width='3' fill='green' />\"+\n\"    <circle cx='575' cy='360' r='91.5' stroke='white' stroke-width='3' fill-opacity='0' />\"+\n\"    <circle cx='575' cy='360' r='2' stroke='white' fill='white' />\"+\n\"    <circle cx='160' cy='360' r='2' stroke='white' fill='white' />\"+\n\"    <circle cx='990' cy='360' r='2' stroke='white' fill='white' />\"+\n\"    <path d='M 50,324.4 L 40,324.4 40, 396.6 50 396.6 z' stroke='white' stroke-width='3' fill-opacity='0' />\"+\n\"    <path d='M 1100,324.4 L 1110,324.4 1110,396.6 1100,396.6 z' stroke='white' stroke-width='3' fill-opacity='0' />\"+\n\"    <path d='M 50,269.4 L 105,269.4 105,451.6 50 451.6 z' stroke='white' stroke-width='3' fill-opacity='0' />\"+\n\"    <path d='M 1100,269.4 L 1045,269.4 1045,451.6 1100,451.6 z' stroke='white' stroke-width='3' fill-opacity='0' />\"+\n\"    <path d='M 50,159.4 L 215,159.4 215,561.6 50 561.6 z' stroke='white' stroke-width='3' fill-opacity='0' />\"+\n\"    <path d='M 1100,159.4 L 935,159.4 935,561.6 1100,561.6 z' stroke='white' stroke-width='3' fill-opacity='0' />\"+\n\"    <path d='M 215,286.875 A 91.5,91.5 0 0,1 215,433.125 z' stroke='white' stroke-width='3' fill='green' />\"+\n\"    <path d='M 935,286.875 A 91.5,91.5 0 0,0 935,433.125 z' stroke='white' stroke-width='3' fill='green' />\"+\n\"    <path d='M 50,30 A 10,10 0 0,0 60,20 L 50,20 z' stroke='white' stroke-width='3' fill-opacity='0' />\"+\n\"    <path d='M 60,700 A 10,10 0 0,0 50,690 L 50,700 z' stroke='white' stroke-width='3' fill-opacity='0' />\"+\n\"    <path d='M 1100,690 A 10,10 0 0,0 1090,700 L 1100,700 z' stroke='white' stroke-width='3' fill-opacity='0' />\"+\n\"    <path d='M 1090,20 A 10,10 0 0,0 1100,30 L 1100,20 z' stroke='white' stroke-width='3' fill-opacity='0' />\"+\n\"</svg>\", \n    function(scope, element) {\n       \n        element.addClass('block');\n        \n        var points = []\n        \n        var scale = 0.7;\n        var dataTopLeftX = 0;\n        var dataWidth = 52489;\n        var dataTopLeftY = -33960;\n        var dataHeight = 67930;\n\n        viewHeight = 690;\n        viewWidth = 1050;\n    \n        var svg = d3.select($(element).children(\"svg\")[0])\n        \n        var sidsTeamA = [13,14,97,98,47,16,49,88,19,52,53,54,23,24,57,58,59,28]\n        var sidsTeamB = [61,62,99,100,63,64,65,66,67,68,69,38,71,40,73,74,75,44]\n        var sensorGroups = [ [13,14,97,98],  [47,16], [49,88], [19,52],    [53,54],  [23,24],\n          [57,58],  [59,28], [61,62,99,100],    [63,64],  [65,66],    [67,68],  [69,38],   [71,40], [73,74],[75,44]];\n        function unitsPerPixel() {\n            return {\n                width: dataHeight / viewWidth,\n                height: dataWidth / viewHeight\n            }\n        }\n\n        function mapPoint(point) {\n            var unitPerPixcel = unitsPerPixel()\n            return {\n                y: ((point.x) / unitPerPixcel.height)+15,\n                x: ((point.y + 33960) / unitPerPixcel.width ) +50,\n            }\n        }\n        \n        var requested = false;\n        \n        function addPoint(point) {\n            var cordinates = mapPoint(point);\n            var id = point.id;\n            if(points[id] == undefined)\n                points[id] = point\n             points[id].cordinates = cordinates;\n             points[id].selected = point.selected\n        }\n        \n     \n        \n        var stop = false;\n        function draw() {\n          \n          for(var i = 0; i<points.length;i++){\n            if(points[i] != undefined){\n                var point = points[i];\n                if(point.svg == undefined){\n                    point.svg = svg.append(\"circle\")\n                                .attr(\"r\", 10)\n                                .attr(\"id\", i)\n                                \n                }\n                point.svg\n                        .attr(\"cx\", point.cordinates.x)\n                        .attr(\"cy\", point.cordinates.y)\n                        .style(\"fill\", getColor(point));\n            }\n          }\n        }\n        \n        function isBallEvent(point){\n            return point.id==4 || point.id==8 || point.id==10 || point.id== 12;\n        }\n        \n        function isSelected(event){\n            return event.selected ||currentGroup.indexOf(event.id)!=-1;\n        }\n        \n        function isTeamA(event){\n            return  sidsTeamA.indexOf(event.id)!=-1;\n        }\n         function isTeamB(event){\n            return  sidsTeamB.indexOf(event.id)!=-1;\n        }\n        \n        function getColor(event){\n            if(isBallEvent(event)){\n                return \"white\"\n            }\n            else if(isSelected(event)){\n                console.log(event.id)\n                return \"red\";\n            }\n            else if(isTeamA(event)){\n                 return \"blue\"\n            }else if(isTeamB(event)){\n                 return \"orange\"\n            }\n            else{\n                return \"black\"\n            }\n        }\n        \n        var currentGroup = sensorGroups[0];\n       \n        var init = false;\n        var remove = scope.$watch('point2', function(newPoinsts, oldValue) {\n            //console.log(newPoinsts)\n            if(newPoinsts!=undefined)\n                newPoinsts.forEach(function(newPoinst){\n                    if(newPoinst._4){\n                        currentGroup= sensorGroups.find(function(group){return group.indexOf(newPoinst._1)!=-1})\n                    }\n                    addPoint({id:newPoinst._1,x:newPoinst._2,y:newPoinst._3,selected:newPoinst._4})\n                })\n             window.requestAnimationFrame(draw); \n        });\n        \n        scope.$on('clean', function() {\n            remove()\n            stop = true;\n        });\n       \n    })\n</script>"
      },
      "dateCreated":"2017-03-11T12:04:28+0000",
      "dateStarted":"2017-03-19T19:26:36+0000",
      "dateFinished":"2017-03-19T19:26:36+0000",
      "status":"FINISHED",
      "progressUpdateIntervalMs":500,
      "$$hashKey":"object:277"
    },
    {  
      "text":"%flink \nimport scala.collection.JavaConverters._\nimport org.apache.zeppelin.flink.ui._;\nimport org.apache.zeppelin.flink.FlinkInterpreter;\n\nclass FootballFieldUi() extends UIComponent[List[(Int,Int,Int,Boolean)],Any](classOf[Any]) {\n\n   logger.info(\"Start SoccerFieldUi\");\n   scope.remove(\"point2\")\n   \n   override def invoke(item:List[(Int,Int,Int,Boolean)]): Unit = {\n       scope.put(\"point2\" , item.asJava);\n   }\n   \n   def getTemplate(): String = {\n       \"<i2-football-field></i2-football-field>\"\n   }\n}\n",
      "dateUpdated":"2017-03-19T19:26:36+0000",
      "config":{  
        "lineNumbers":false,
        "tableHide":false,
        "colWidth":6,
        "editorMode":"ace/mode/scala",
        "editorHide":false,
        "graph":{  
          "mode":"table",
          "height":300,
          "optionOpen":false,
          "keys":[  

          ],
          "values":[  

          ],
          "groups":[  

          ],
          "scatter":{  

          }
        },
        "enabled":true
      },
      "settings":{  
        "params":{  

        },
        "forms":{  

        }
      },
      "jobName":"paragraph_1489233868638_-2028571042",
      "id":"20160810-190341_344410725",
      "result":{  
        "code":"SUCCESS",
        "type":"TEXT",
        "msg":"import scala.collection.JavaConverters._\nimport org.apache.zeppelin.flink.ui._\nimport org.apache.zeppelin.flink.FlinkInterpreter\ndefined class FootballFieldUi\n"
      },
      "dateCreated":"2017-03-11T12:04:28+0000",
      "dateStarted":"2017-03-19T19:26:44+0000",
      "dateFinished":"2017-03-19T19:26:53+0000",
      "status":"FINISHED",
      "progressUpdateIntervalMs":500,
      "$$hashKey":"object:278"
    },
    {  
      "text":"%md \n### Implementation of the linechat",
      "dateUpdated":"2017-03-19T19:26:37+0000",
      "config":{  
        "colWidth":12,
        "editorMode":"ace/mode/markdown",
        "editorHide":true,
        "graph":{  
          "mode":"table",
          "height":300,
          "optionOpen":false,
          "keys":[  

          ],
          "values":[  

          ],
          "groups":[  

          ],
          "scatter":{  

          }
        },
        "enabled":true
      },
      "settings":{  
        "params":{  

        },
        "forms":{  

        }
      },
      "jobName":"paragraph_1489233868638_-2028571042",
      "id":"20160819-095401_1640725299",
      "result":{  
        "code":"SUCCESS",
        "type":"HTML",
        "msg":"<h3>Implementation of the linechat</h3>\n"
      },
      "dateCreated":"2017-03-11T12:04:28+0000",
      "dateStarted":"2017-03-19T19:26:37+0000",
      "dateFinished":"2017-03-19T19:26:37+0000",
      "status":"FINISHED",
      "progressUpdateIntervalMs":500,
      "$$hashKey":"object:279"
    },
    {  
      "text":"%angular\n\n<style>\n    .line {\n        fill: none;\n        stroke: steelblue;\n        stroke-width: 1.5px;\n    }\n    .block{\n        height: 300px;\n        display: block;\n    }\n    .axis path,\n.axis line {\n  fill: none;\n  stroke: #000;\n  shape-rendering: crispEdges;\n}\n\n.axis text {\n  font: 10px sans-serif;\n}\n.axis--x text{\n   display: none;\n}\nbody {\n    padding-top: 30px  !important;\n   \n}\n</style>\n\n<script>\nzeppelin.addComponent(\n    \"i2Linechart\",\n    \"\",\n    function(scope,element){\n      \n        element.addClass('block');\n        \n        var n = 500\n            data = []\n        \n        for(var i = 0; i < n; i++){\n            data.push({x:i, y:0});\n        }\n            \n        d3.select(element[0])\n          .attr(\"width\", 500)\n          .attr(\"height\", 300);\n        \n        var svg = d3.select(element[0])\n          .append(\"svg\")\n          .attr(\"width\", 500)\n          .attr(\"height\", 300);\n        \n        var margin = {top: 20, right: 20, bottom: 20, left: 80};\n            \n        width = +svg.attr(\"width\") - margin.left - margin.right;\n        height = +svg.attr(\"height\") - margin.top - margin.bottom;\n         console.log(width)\n        \n        g = svg.append(\"g\")\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n    \n        g.append(\"defs\").append(\"clipPath\")\n            .attr(\"id\", \"clip\")\n            .append(\"rect\")\n            .attr(\"width\", width)\n            .attr(\"height\", height);\n        var linesvg = g.append(\"path\")\n            .datum(data)\n            .attr(\"class\", \"line\")\n            .attr(\"d\", line);\n            \n        var xScale = d3.scale.linear()\n            .domain([0, n - 1])\n            .range([0, width]);\n     \n    \n        var yScale = d3.scale.linear()\n            .domain([0,n])\n            .range([height, 0]);\n             \n    \n        var line = d3.svg.line()\n            .interpolate(\"monotone\")\n            .x(function (d, i) {\n                \n                return xScale(d.x);\n            })\n            .y(function (d, i) {\n                //console.log(d.y)\n                //console.log(yScale(d.y))\n                return yScale(d.y);\n            });\n  \n        \n            \n        var xAxis = g.append(\"g\")\n            .attr(\"class\", \"axis axis--x\")\n            .attr(\"transform\", \"translate(0,\" + yScale(0) + \")\")\n            .call(d3.svg.axis()\n                .scale(xScale)\n                .orient(\"bottom\"));\n            \n        var yAxis = g.append(\"g\")\n            .attr(\"class\", \"axis axis--y\")\n            .attr(\"transform\", \"translate(405)\")\n            .call(d3.svg.axis()\n                .scale(yScale)\n                \n                .orient(\"right\"));\n\n        function setYScale(){\n            var yValues = _.map(data, function(item){\n                return item.y\n            })\n            \n            var maxY = _.max(yValues);\n            var minY = _.min(yValues);\n            yScale.domain([0, maxY + (maxY*0.1)])\n            yAxis.call(d3.svg.axis()\n                .scale(yScale)\n                .orient(\"right\"));\n        }\n        \n        \n        \n        \n        var isRequested = false;\n        var stop=false;\n        function drawChart() {\n            if(isRequested){\n                isRequested = false;\n                setYScale()\n                linesvg\n                .datum(data)\n                .attr(\"d\", line)\n                //.attr(\"transform\", null);\n                \n                \n            }\n            if(!stop)\n                window.requestAnimationFrame(drawChart);\n        }\n        \n        window.requestAnimationFrame(drawChart);\n    \n        function shiftData(){\n           data = _.map(data, function(item){\n               item.x = item.x - 1;\n               return item;\n           });\n           data = _.filter(data, function(item){\n               return item.x >= 0;\n           });\n            \n        }    \n        \n        \n        \n        var remove = scope.$watch('stream', function(newValue, oldValue) {\n           if(newValue!=undefined){\n               console.log(newValue)\n               var v_min = newValue._1;\n               var v_max = newValue._2;\n               var t_min = newValue._3;\n               var t_max = newValue._4;\n               data.push({x:n, y:t_min});\n               data.push({x:n, y:v_max});\n               data.push({x:n, y:v_min});\n               data.push({x:n, y:t_max});\n               shiftData()\n               isRequested = true;\n           }\n        })\n        scope.$on('clean', function() {\n            remove()\n            stop = true;\n        });\n        \n        isRequested = true;\n})\n</script>",
      "dateUpdated":"2017-03-19T19:26:37+0000",
      "config":{  
        "colWidth":6,
        "editorMode":"ace/mode/scala",
        "graph":{  
          "mode":"table",
          "height":300,
          "optionOpen":false,
          "keys":[  

          ],
          "values":[  

          ],
          "groups":[  

          ],
          "scatter":{  

          }
        },
        "enabled":true
      },
      "settings":{  
        "params":{  

        },
        "forms":{  

        }
      },
      "jobName":"paragraph_1489233868638_-2028571042",
      "id":"20160921-162019_1914899954",
      "result":{  
        "code":"SUCCESS",
        "type":"ANGULAR",
        "msg":"<style>\n    .line {\n        fill: none;\n        stroke: steelblue;\n        stroke-width: 1.5px;\n    }\n    .block{\n        height: 300px;\n        display: block;\n    }\n    .axis path,\n.axis line {\n  fill: none;\n  stroke: #000;\n  shape-rendering: crispEdges;\n}\n\n.axis text {\n  font: 10px sans-serif;\n}\n.axis--x text{\n   display: none;\n}\nbody {\n    padding-top: 30px  !important;\n   \n}\n</style>\n\n<script>\nzeppelin.addComponent(\n    \"i2Linechart\",\n    \"\",\n    function(scope,element){\n      \n        element.addClass('block');\n        \n        var n = 500\n            data = []\n        \n        for(var i = 0; i < n; i++){\n            data.push({x:i, y:0});\n        }\n            \n        d3.select(element[0])\n          .attr(\"width\", 500)\n          .attr(\"height\", 300);\n        \n        var svg = d3.select(element[0])\n          .append(\"svg\")\n          .attr(\"width\", 500)\n          .attr(\"height\", 300);\n        \n        var margin = {top: 20, right: 20, bottom: 20, left: 80};\n            \n        width = +svg.attr(\"width\") - margin.left - margin.right;\n        height = +svg.attr(\"height\") - margin.top - margin.bottom;\n         console.log(width)\n        \n        g = svg.append(\"g\")\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n    \n        g.append(\"defs\").append(\"clipPath\")\n            .attr(\"id\", \"clip\")\n            .append(\"rect\")\n            .attr(\"width\", width)\n            .attr(\"height\", height);\n        var linesvg = g.append(\"path\")\n            .datum(data)\n            .attr(\"class\", \"line\")\n            .attr(\"d\", line);\n            \n        var xScale = d3.scale.linear()\n            .domain([0, n - 1])\n            .range([0, width]);\n     \n    \n        var yScale = d3.scale.linear()\n            .domain([0,n])\n            .range([height, 0]);\n             \n    \n        var line = d3.svg.line()\n            .interpolate(\"monotone\")\n            .x(function (d, i) {\n                \n                return xScale(d.x);\n            })\n            .y(function (d, i) {\n                //console.log(d.y)\n                //console.log(yScale(d.y))\n                return yScale(d.y);\n            });\n  \n        \n            \n        var xAxis = g.append(\"g\")\n            .attr(\"class\", \"axis axis--x\")\n            .attr(\"transform\", \"translate(0,\" + yScale(0) + \")\")\n            .call(d3.svg.axis()\n                .scale(xScale)\n                .orient(\"bottom\"));\n            \n        var yAxis = g.append(\"g\")\n            .attr(\"class\", \"axis axis--y\")\n            .attr(\"transform\", \"translate(405)\")\n            .call(d3.svg.axis()\n                .scale(yScale)\n                \n                .orient(\"right\"));\n\n        function setYScale(){\n            var yValues = _.map(data, function(item){\n                return item.y\n            })\n            \n            var maxY = _.max(yValues);\n            var minY = _.min(yValues);\n            yScale.domain([0, maxY + (maxY*0.1)])\n            yAxis.call(d3.svg.axis()\n                .scale(yScale)\n                .orient(\"right\"));\n        }\n        \n        \n        \n        \n        var isRequested = false;\n        var stop=false;\n        function drawChart() {\n            if(isRequested){\n                isRequested = false;\n                setYScale()\n                linesvg\n                .datum(data)\n                .attr(\"d\", line)\n                //.attr(\"transform\", null);\n                \n                \n            }\n            if(!stop)\n                window.requestAnimationFrame(drawChart);\n        }\n        \n        window.requestAnimationFrame(drawChart);\n    \n        function shiftData(){\n           data = _.map(data, function(item){\n               item.x = item.x - 1;\n               return item;\n           });\n           data = _.filter(data, function(item){\n               return item.x >= 0;\n           });\n            \n        }    \n        \n        \n        \n        var remove = scope.$watch('stream', function(newValue, oldValue) {\n           if(newValue!=undefined){\n               console.log(newValue)\n               var v_min = newValue._1;\n               var v_max = newValue._2;\n               var t_min = newValue._3;\n               var t_max = newValue._4;\n               data.push({x:n, y:t_min});\n               data.push({x:n, y:v_max});\n               data.push({x:n, y:v_min});\n               data.push({x:n, y:t_max});\n               shiftData()\n               isRequested = true;\n           }\n        })\n        scope.$on('clean', function() {\n            remove()\n            stop = true;\n        });\n        \n        isRequested = true;\n})\n</script>"
      },
      "dateCreated":"2017-03-11T12:04:28+0000",
      "dateStarted":"2017-03-19T19:26:38+0000",
      "dateFinished":"2017-03-19T19:26:38+0000",
      "status":"FINISHED",
      "progressUpdateIntervalMs":500,
      "$$hashKey":"object:280"
    },
    {  
      "text":"%flink\nimport org.apache.zeppelin.flink.ui._;\nclass LineChartUi() extends UIComponent[(Int,Int,Int,Int,Long), Any](classOf[Any]) {\n\n    scope.remove(\"stream\")\n   \n   override def invoke(dataItem:(Int,Int,Int,Int,Long)) = {\n     scope.put(\"stream\" , dataItem);\n   }\n   \n   def getTemplate(): String = {\n       \"<i2-linechart></i2-linechart>\"\n   }\n}",
      "dateUpdated":"2017-03-19T19:26:38+0000",
      "config":{  
        "colWidth":6,
        "editorMode":"ace/mode/scala",
        "graph":{  
          "mode":"table",
          "height":300,
          "optionOpen":false,
          "keys":[  

          ],
          "values":[  

          ],
          "groups":[  

          ],
          "scatter":{  

          }
        },
        "enabled":true
      },
      "settings":{  
        "params":{  

        },
        "forms":{  

        }
      },
      "jobName":"paragraph_1489233868638_-2028571042",
      "id":"20160818-104329_2145779919",
      "result":{  
        "code":"SUCCESS",
        "type":"TEXT",
        "msg":"import org.apache.zeppelin.flink.ui._\ndefined class LineChartUi\n"
      },
      "dateCreated":"2017-03-11T12:04:28+0000",
      "dateStarted":"2017-03-19T19:26:47+0000",
      "dateFinished":"2017-03-19T19:26:55+0000",
      "status":"FINISHED",
      "progressUpdateIntervalMs":500,
      "$$hashKey":"object:281"
    },
    {  
      "text":"%md\n### general ui elements\n",
      "dateUpdated":"2017-03-19T19:26:39+0000",
      "config":{  
        "colWidth":12,
        "editorMode":"ace/mode/markdown",
        "editorHide":true,
        "graph":{  
          "mode":"table",
          "height":300,
          "optionOpen":false,
          "keys":[  

          ],
          "values":[  

          ],
          "groups":[  

          ],
          "scatter":{  

          }
        },
        "enabled":true
      },
      "settings":{  
        "params":{  

        },
        "forms":{  

        }
      },
      "jobName":"paragraph_1489233868639_-2028955791",
      "id":"20160823-112841_1006384319",
      "result":{  
        "code":"SUCCESS",
        "type":"HTML",
        "msg":"<h3>general ui elements</h3>\n"
      },
      "dateCreated":"2017-03-11T12:04:28+0000",
      "dateStarted":"2017-03-19T19:26:39+0000",
      "dateFinished":"2017-03-19T19:26:39+0000",
      "status":"FINISHED",
      "progressUpdateIntervalMs":500,
      "$$hashKey":"object:282"
    },
    {  
      "text":"%flink\nimport java.util.LinkedList;\nclass ListViewUi(maxItems:Int = 20) extends UIComponent[String,Any](classOf[Any]) {\n   var  list = new LinkedList[String]();\n   scope.remove(\"content\")\n\n   override def invoke(dataItem:String) = {\n     list.add(dataItem.toString)  \n     if(list.size > maxItems){\n         list.removeFirst()\n     }\n     scope.put(\"content\" , list);\n   }\n   \n   def getTemplate(): String = {\n       \"<div ng-repeat='item in content track by $index'>{{$index}}. {{item}}</div>\"\n   }\n}",
      "dateUpdated":"2017-03-19T19:26:39+0000",
      "config":{  
        "colWidth":6,
        "editorMode":"ace/mode/scala",
        "graph":{  
          "mode":"table",
          "height":300,
          "optionOpen":false,
          "keys":[  

          ],
          "values":[  

          ],
          "groups":[  

          ],
          "scatter":{  

          }
        },
        "enabled":true
      },
      "settings":{  
        "params":{  

        },
        "forms":{  

        }
      },
      "jobName":"paragraph_1489233868639_-2028955791",
      "id":"20160822-104732_265144918",
      "result":{  
        "code":"SUCCESS",
        "type":"TEXT",
        "msg":"import java.util.LinkedList\ndefined class ListViewUi\n"
      },
      "dateCreated":"2017-03-11T12:04:28+0000",
      "dateStarted":"2017-03-19T19:26:53+0000",
      "dateFinished":"2017-03-19T19:26:57+0000",
      "status":"FINISHED",
      "progressUpdateIntervalMs":500,
      "$$hashKey":"object:283"
    },
    {  
      "text":"%flink \nimport scala.collection.JavaConverters._\n\nclass Selection(label:String, options : List[String], defaultOption: String) extends UIComponent[Any,String](classOf[String]) {\n   scope.put(\"label\", label)\n   scope.put(\"options\", options.asJava)        \n   scope.put(\"select\", defaultOption)\n   \n   scope.watch(\"select\",(_:String,newValue:String)=>{\n        addMessageToOutputStream(newValue)\n    })\n   \n   def getTemplate(): String = {\n    \"<style> body {    padding-top: 0px  !important; </style>\"+\n    \"<form class='form-inline'>\"+   \n    \"<div class='form-group'>\"+   \n    \"<label for='multipleSelect'> {{label}}: </label><br>\" +\n    \"<select class='form-control' name='multipleSelect' id='multipleSelect' ng-model='select'> \" +\n    \"  <option  ng-repeat='option in options' value='{{option}}'>{{option}}</option>\" +\n    \"</select><br>\"+\n    \"</div>\"+\n    \"</form>\"\n   }\n}",
      "dateUpdated":"2017-03-19T19:26:40+0000",
      "config":{  
        "colWidth":6,
        "editorMode":"ace/mode/scala",
        "graph":{  
          "mode":"table",
          "height":300,
          "optionOpen":false,
          "keys":[  

          ],
          "values":[  

          ],
          "groups":[  

          ],
          "scatter":{  

          }
        },
        "enabled":true
      },
      "settings":{  
        "params":{  

        },
        "forms":{  

        }
      },
      "jobName":"paragraph_1489233868639_-2028955791",
      "id":"20160823-104238_622762948",
      "result":{  
        "code":"SUCCESS",
        "type":"TEXT",
        "msg":"import scala.collection.JavaConverters._\ndefined class Selection\n"
      },
      "dateCreated":"2017-03-11T12:04:28+0000",
      "dateStarted":"2017-03-19T19:26:55+0000",
      "dateFinished":"2017-03-19T19:27:00+0000",
      "status":"FINISHED",
      "progressUpdateIntervalMs":500,
      "$$hashKey":"object:284"
    },
    {  
      "text":"%flink \nclass LableUi() extends UIComponent[String,Any](classOf[Any]) {\n  \n   scope.remove(\"content\")\n   override def invoke(content:String) = {\n    \n     scope.put(\"content\" , content);\n   }\n   \n   def getTemplate(): String = {\n        \"<style> body {    padding-top: 0px  !important; </style>\"+\n       \"{{content}}\"\n   }\n}",
      "dateUpdated":"2017-03-19T19:26:40+0000",
      "config":{  
        "colWidth":6,
        "editorMode":"ace/mode/scala",
        "graph":{  
          "mode":"table",
          "height":300,
          "optionOpen":false,
          "keys":[  

          ],
          "values":[  

          ],
          "groups":[  

          ],
          "scatter":{  

          }
        },
        "enabled":true
      },
      "settings":{  
        "params":{  

        },
        "forms":{  

        }
      },
      "jobName":"paragraph_1489233868639_-2028955791",
      "id":"20160825-212132_1167559451",
      "result":{  
        "code":"SUCCESS",
        "type":"TEXT",
        "msg":"defined class LableUi\n"
      },
      "dateCreated":"2017-03-11T12:04:28+0000",
      "dateStarted":"2017-03-19T19:26:57+0000",
      "dateFinished":"2017-03-19T19:27:01+0000",
      "status":"FINISHED",
      "progressUpdateIntervalMs":500,
      "$$hashKey":"object:285"
    },
    {  
      "text":"%md\n### register m4 function\n",
      "dateUpdated":"2017-03-19T19:26:40+0000",
      "config":{  
        "colWidth":12,
        "editorMode":"ace/mode/markdown",
        "editorHide":true,
        "graph":{  
          "mode":"table",
          "height":300,
          "optionOpen":false,
          "keys":[  

          ],
          "values":[  

          ],
          "groups":[  

          ],
          "scatter":{  

          }
        },
        "enabled":true
      },
      "settings":{  
        "params":{  

        },
        "forms":{  

        }
      },
      "jobName":"paragraph_1489233868639_-2028955791",
      "id":"20160821-113903_1185803154",
      "result":{  
        "code":"SUCCESS",
        "type":"HTML",
        "msg":"<h3>register m4 function</h3>\n"
      },
      "dateCreated":"2017-03-11T12:04:28+0000",
      "dateStarted":"2017-03-19T19:26:41+0000",
      "dateFinished":"2017-03-19T19:26:41+0000",
      "status":"FINISHED",
      "progressUpdateIntervalMs":500,
      "$$hashKey":"object:286"
    },
    {  
      "text":"%flink\nimport org.apache.flink.streaming.api.windowing.assigners._\n/**\n * Input stream with x and y value\n */\nimplicit class M4(stream: DataStream[(Long, Int)]) {\n  def m4(time:Time): DataStream[(Int,Int,Int,Int,Long)] = {\n      val windowedStream = stream\n      .windowAll(TumblingEventTimeWindows.of(time))\n      var v_min = windowedStream.minBy(1).map(x=>(x._2,Int.MinValue, Int.MaxValue, Int.MinValue, x._1));\n      var v_max = windowedStream.maxBy(1).map(x=>(Int.MaxValue, x._2, Int.MaxValue, Int.MinValue, x._1));\n      var t_min = windowedStream.minBy(0).map(x=>(Int.MaxValue, Int.MinValue, x._2, Int.MinValue, x._1));\n      var t_max = windowedStream.maxBy(0).map(x=>(Int.MaxValue, Int.MinValue, Int.MaxValue, x._2, x._1));\n      var allAggregations = v_min.union(v_max, t_min, t_max);\n      allAggregations\n        .windowAll(TumblingEventTimeWindows.of(time))\n        .fold((-100,-100,-100,-100,-100L)) ((current:(Int,Int,Int,Int,Long), value:(Int,Int,Int,Int,Long)) => {value match {\n             case ( v_min, Int.MinValue, Int.MaxValue, Int.MinValue,_)   =>     (v_min, current._2, current._3, current._4,current._5)\n             case ( Int.MaxValue, v_max, Int.MaxValue, Int.MinValue,_)   =>     (current._1, v_max, current._3, current._4,current._5)\n             case ( Int.MaxValue, Int.MinValue, t_min, Int.MinValue,_)   =>     (current._1, current._2, t_min, current._4,current._5)\n             case ( Int.MaxValue, Int.MinValue, Int.MaxValue, t_max,maxTime)   =>     (current._1, current._2, current._3, t_max,maxTime)\n             }})\n  }\n}",
      "dateUpdated":"2017-03-19T19:26:41+0000",
      "config":{  
        "colWidth":12,
        "editorMode":"ace/mode/scala",
        "lineNumbers":true,
        "graph":{  
          "mode":"table",
          "height":300,
          "optionOpen":false,
          "keys":[  

          ],
          "values":[  

          ],
          "groups":[  

          ],
          "scatter":{  

          }
        },
        "enabled":true
      },
      "settings":{  
        "params":{  

        },
        "forms":{  

        }
      },
      "jobName":"paragraph_1489233868639_-2028955791",
      "id":"20160821-113953_1113616664",
      "result":{  
        "code":"SUCCESS",
        "type":"TEXT",
        "msg":"import org.apache.flink.streaming.api.windowing.assigners._\ndefined class M4\n"
      },
      "dateCreated":"2017-03-11T12:04:28+0000",
      "dateStarted":"2017-03-19T19:27:00+0000",
      "dateFinished":"2017-03-19T19:27:04+0000",
      "status":"FINISHED",
      "progressUpdateIntervalMs":500,
      "$$hashKey":"object:287"
    },
    {  
      "text":"%md \n### register generic count aggregation",
      "dateUpdated":"2017-03-19T19:26:41+0000",
      "config":{  
        "colWidth":12,
        "editorMode":"ace/mode/markdown",
        "editorHide":true,
        "graph":{  
          "mode":"table",
          "height":300,
          "optionOpen":false,
          "keys":[  

          ],
          "values":[  

          ],
          "groups":[  

          ],
          "scatter":{  

          }
        },
        "enabled":true
      },
      "settings":{  
        "params":{  

        },
        "forms":{  

        }
      },
      "jobName":"paragraph_1489233868639_-2028955791",
      "id":"20170103-131613_1349083393",
      "result":{  
        "code":"SUCCESS",
        "type":"HTML",
        "msg":"<h3>register generic count aggregation</h3>\n"
      },
      "dateCreated":"2017-03-11T12:04:28+0000",
      "dateStarted":"2017-03-19T19:26:41+0000",
      "dateFinished":"2017-03-19T19:26:42+0000",
      "status":"FINISHED",
      "progressUpdateIntervalMs":500,
      "$$hashKey":"object:288"
    },
    {  
      "text":"%flink\nimport org.apache.flink.streaming.api.windowing.assigners._\n\nimplicit class Metric[A](stream: DataStream[A]) {\n  def countItems(): DataStream[String] = {\n        return stream.map(x=>(0,1))\n            .windowAll(TumblingProcessingTimeWindows.of(Time.seconds(1)))\n            .sum(1)\n            .map(x=> x._2 + \" items/s\")\n  }\n}",
      "dateUpdated":"2017-03-19T19:26:41+0000",
      "config":{  
        "colWidth":12,
        "editorMode":"ace/mode/scala",
        "graph":{  
          "mode":"table",
          "height":300,
          "optionOpen":false,
          "keys":[  

          ],
          "values":[  

          ],
          "groups":[  

          ],
          "scatter":{  

          }
        },
        "enabled":true
      },
      "settings":{  
        "params":{  

        },
        "forms":{  

        }
      },
      "jobName":"paragraph_1489233868639_-2028955791",
      "id":"20161009-235146_755935289",
      "result":{  
        "code":"SUCCESS",
        "type":"TEXT",
        "msg":"import org.apache.flink.streaming.api.windowing.assigners._\ndefined class Metric\n"
      },
      "dateCreated":"2017-03-11T12:04:28+0000",
      "dateStarted":"2017-03-19T19:27:01+0000",
      "dateFinished":"2017-03-19T19:27:08+0000",
      "status":"FINISHED",
      "progressUpdateIntervalMs":500,
      "$$hashKey":"object:289"
    },
    {  
      "text":"%md \n# Prepare Flink streams and connect them to the ui components",
      "dateUpdated":"2017-03-19T19:26:42+0000",
      "config":{  
        "colWidth":12,
        "editorMode":"ace/mode/markdown",
        "editorHide":true,
        "graph":{  
          "mode":"table",
          "height":300,
          "optionOpen":false,
          "keys":[  

          ],
          "values":[  

          ],
          "groups":[  

          ],
          "scatter":{  

          }
        },
        "enabled":true
      },
      "settings":{  
        "params":{  

        },
        "forms":{  

        }
      },
      "jobName":"paragraph_1489233868639_-2028955791",
      "id":"20160819-095447_461825118",
      "result":{  
        "code":"SUCCESS",
        "type":"HTML",
        "msg":"<h1>Prepare Flink streams and connect them to the ui components</h1>\n"
      },
      "dateCreated":"2017-03-11T12:04:28+0000",
      "dateStarted":"2017-03-19T19:26:43+0000",
      "dateFinished":"2017-03-19T19:26:43+0000",
      "status":"FINISHED",
      "progressUpdateIntervalMs":500,
      "$$hashKey":"object:290"
    },
    {  
      "text":"%flink \nvar ui = new LableUi()\n",
      "dateUpdated":"2017-03-19T19:26:43+0000",
      "config":{  
        "colWidth":6,
        "editorMode":"ace/mode/scala",
        "graph":{  
          "mode":"table",
          "height":300,
          "optionOpen":false,
          "keys":[  

          ],
          "values":[  

          ],
          "groups":[  

          ],
          "scatter":{  

          }
        },
        "enabled":true
      },
      "settings":{  
        "params":{  

        },
        "forms":{  

        }
      },
      "jobName":"paragraph_1489233868639_-2028955791",
      "id":"20160825-212323_2098054786",
      "result":{  
        "code":"SUCCESS",
        "type":"ANGULAR",
        "msg":"\n<style> body {    padding-top: 0px  !important; </style>{{content}}\n"
      },
      "dateCreated":"2017-03-11T12:04:28+0000",
      "dateStarted":"2017-03-19T19:27:04+0000",
      "dateFinished":"2017-03-19T19:27:09+0000",
      "status":"FINISHED",
      "progressUpdateIntervalMs":500,
      "$$hashKey":"object:291"
    },
    {  
      "text":"%flink\nvar rawStats = new LableUi()",
      "dateUpdated":"2017-03-19T19:26:43+0000",
      "config":{  
        "colWidth":6,
        "editorMode":"ace/mode/markdown",
        "graph":{  
          "mode":"table",
          "height":300,
          "optionOpen":false,
          "keys":[  

          ],
          "values":[  

          ],
          "groups":[  

          ],
          "scatter":{  

          }
        },
        "enabled":true
      },
      "settings":{  
        "params":{  

        },
        "forms":{  

        }
      },
      "jobName":"paragraph_1489233868645_-2045115245",
      "id":"20161017-084811_339888826",
      "result":{  
        "code":"SUCCESS",
        "type":"ANGULAR",
        "msg":"\n<style> body {    padding-top: 0px  !important; </style>{{content}}\n"
      },
      "dateCreated":"2017-03-11T12:04:28+0000",
      "dateStarted":"2017-03-19T19:27:08+0000",
      "dateFinished":"2017-03-19T19:27:10+0000",
      "status":"FINISHED",
      "progressUpdateIntervalMs":500,
      "$$hashKey":"object:292"
    },
    {  
      "text":"%flink \nimport java.util.Date\nimport org.apache.flink.streaming.api.windowing.assigners._\n\nvar timeStampStream = debsItemDataStream\n                .windowAll(TumblingEventTimeWindows.of(Time.seconds(1)))\n                .maxBy(\"ts\")\n                .map(x=>{\n                    var diff = x.ts - 10753295594424116L; \n                    var secs = diff / 1000000000000L;\n                    var min = secs/60;\n                    var s = secs%60;\n                    \"Timestamp: \"+ min + \"min : \" + s +\"s\"; })",
      "dateUpdated":"2017-03-19T19:26:44+0000",
      "config":{  
        "colWidth":6,
        "editorMode":"ace/mode/scala",
        "graph":{  
          "mode":"table",
          "height":300,
          "optionOpen":false,
          "keys":[  

          ],
          "values":[  

          ],
          "groups":[  

          ],
          "scatter":{  

          }
        },
        "enabled":true
      },
      "settings":{  
        "params":{  

        },
        "forms":{  

        }
      },
      "jobName":"paragraph_1489233868646_-2043960998",
      "id":"20160825-212900_1463435756",
      "result":{  
        "code":"SUCCESS",
        "type":"TEXT",
        "msg":"import java.util.Date\nimport org.apache.flink.streaming.api.windowing.assigners._\ntimeStampStream: org.apache.flink.streaming.api.scala.DataStream[String] = org.apache.flink.streaming.api.scala.DataStream@6dd81c8\n"
      },
      "dateCreated":"2017-03-11T12:04:28+0000",
      "dateStarted":"2017-03-19T19:27:09+0000",
      "dateFinished":"2017-03-19T19:27:13+0000",
      "status":"FINISHED",
      "progressUpdateIntervalMs":500,
      "$$hashKey":"object:293"
    },
    {  
      "text":"%md \n####playerselection",
      "dateUpdated":"2017-03-19T19:26:44+0000",
      "config":{  
        "colWidth":12,
        "editorMode":"ace/mode/markdown",
        "editorHide":true,
        "graph":{  
          "mode":"table",
          "height":300,
          "optionOpen":false,
          "keys":[  

          ],
          "values":[  

          ],
          "groups":[  

          ],
          "scatter":{  

          }
        },
        "enabled":true
      },
      "settings":{  
        "params":{  

        },
        "forms":{  

        }
      },
      "jobName":"paragraph_1489233868646_-2043960998",
      "id":"20160824-175156_465740784",
      "result":{  
        "code":"SUCCESS",
        "type":"HTML",
        "msg":"<h4>playerselection</h4>\n"
      },
      "dateCreated":"2017-03-11T12:04:28+0000",
      "dateStarted":"2017-03-19T19:26:45+0000",
      "dateFinished":"2017-03-19T19:26:45+0000",
      "status":"FINISHED",
      "progressUpdateIntervalMs":500,
      "$$hashKey":"object:294"
    },
    {  
      "text":"%flink\nimport org.apache.flink.streaming.api.functions.co.CoFlatMapFunction\nimport org.apache.flink.util.Collector\n\nvar balls = List(4,8,10,12)\nvar activeBallStream = debsItemDataStream.filter(dataItem=> balls.contains(dataItem.sid) && dataItem.v != 0)\nvar playerStream = debsItemDataStream.filter(dataItem=> !balls.contains(dataItem.sid) && dataItem.sid != 97 && dataItem.sid != 98 && dataItem.sid != 99 && dataItem.sid != 100  && dataItem.sid != 105  && dataItem.sid != 106)\n\nvar connectedStreams = playerStream.connect(activeBallStream);\n\n",
      "dateUpdated":"2017-03-19T19:26:45+0000",
      "config":{  
        "colWidth":12,
        "editorMode":"ace/mode/scala",
        "graph":{  
          "mode":"table",
          "height":300,
          "optionOpen":false,
          "keys":[  

          ],
          "values":[  

          ],
          "groups":[  

          ],
          "scatter":{  

          }
        },
        "enabled":true
      },
      "settings":{  
        "params":{  

        },
        "forms":{  

        }
      },
      "jobName":"paragraph_1489233868646_-2043960998",
      "id":"20160824-184929_2111000686",
      "result":{  
        "code":"SUCCESS",
        "type":"TEXT",
        "msg":"import org.apache.flink.streaming.api.functions.co.CoFlatMapFunction\nimport org.apache.flink.util.Collector\nballs: List[Int] = List(4, 8, 10, 12)\nactiveBallStream: org.apache.flink.streaming.api.scala.DataStream[DebsDataItem] = org.apache.flink.streaming.api.scala.DataStream@332afa8f\nplayerStream: org.apache.flink.streaming.api.scala.DataStream[DebsDataItem] = org.apache.flink.streaming.api.scala.DataStream@2675a61\nconnectedStreams: org.apache.flink.streaming.api.scala.ConnectedStreams[DebsDataItem,DebsDataItem] = org.apache.flink.streaming.api.scala.ConnectedStreams@361b6ee7\n"
      },
      "dateCreated":"2017-03-11T12:04:28+0000",
      "dateStarted":"2017-03-19T19:27:11+0000",
      "dateFinished":"2017-03-19T19:27:18+0000",
      "status":"FINISHED",
      "progressUpdateIntervalMs":500,
      "$$hashKey":"object:295"
    },
    {  
      "text":"%flink \nval playerUi = new PlayerUi()",
      "dateUpdated":"2017-03-19T19:26:46+0000",
      "config":{  
        "colWidth":6,
        "editorMode":"ace/mode/scala",
        "graph":{  
          "mode":"table",
          "height":300,
          "optionOpen":false,
          "keys":[  

          ],
          "values":[  

          ],
          "groups":[  

          ],
          "scatter":{  

          }
        },
        "enabled":true
      },
      "settings":{  
        "params":{  

        },
        "forms":{  

        }
      },
      "jobName":"paragraph_1489233868646_-2043960998",
      "id":"20160825-193827_436061119",
      "result":{  
        "code":"SUCCESS",
        "type":"ANGULAR",
        "msg":"\n<i2-player-button></i2-player-button>\n"
      },
      "dateCreated":"2017-03-11T12:04:28+0000",
      "dateStarted":"2017-03-19T19:27:13+0000",
      "dateFinished":"2017-03-19T19:27:19+0000",
      "status":"FINISHED",
      "progressUpdateIntervalMs":500,
      "$$hashKey":"object:296"
    },
    {  
      "text":"%flink \nval playerSidSelectionStream = senv.addSource(playerUi.getOutputStreamSource)\n                                    .name(\"player selection source\");\n\n",
      "dateUpdated":"2017-03-19T19:26:46+0000",
      "config":{  
        "colWidth":6,
        "editorMode":"ace/mode/scala",
        "graph":{  
          "mode":"table",
          "height":300,
          "optionOpen":false,
          "keys":[  

          ],
          "values":[  

          ],
          "groups":[  

          ],
          "scatter":{  

          }
        },
        "enabled":true
      },
      "settings":{  
        "params":{  

        },
        "forms":{  

        }
      },
      "jobName":"paragraph_1489233868646_-2043960998",
      "id":"20160825-131715_824166683",
      "result":{  
        "code":"SUCCESS",
        "type":"TEXT",
        "msg":"playerSidSelectionStream: org.apache.flink.streaming.api.scala.DataStream[Int] = org.apache.flink.streaming.api.scala.DataStream@381e953f\n"
      },
      "dateCreated":"2017-03-11T12:04:28+0000",
      "dateStarted":"2017-03-19T19:27:18+0000",
      "dateFinished":"2017-03-19T19:27:20+0000",
      "status":"FINISHED",
      "progressUpdateIntervalMs":500,
      "$$hashKey":"object:297"
    },
    {  
      "text":"%flink\nvar connectedStreams = debsItemDataStream.connect(playerSidSelectionStream);\nvar playerDataSelectionStream = connectedStreams.flatMap {\n    new CoFlatMapFunction[DebsDataItem, Int, (Boolean,DebsDataItem)] {\n        \n    var selectedId:Int = 13;\n    \n    override def flatMap2(elem: Int, collector: Collector[(Boolean,DebsDataItem)]): Unit = {\n        selectedId = elem\n    }\n\n    override def flatMap1(dataItem: DebsDataItem, collector: Collector[(Boolean,DebsDataItem)]): Unit = {\n        val status = if (dataItem.sid == selectedId) true else false;\n        collector.collect((status, dataItem))\n    }\n}}",
      "dateUpdated":"2017-03-19T19:26:47+0000",
      "config":{  
        "colWidth":6,
        "editorMode":"ace/mode/scala",
        "graph":{  
          "mode":"table",
          "height":300,
          "optionOpen":false,
          "keys":[  

          ],
          "values":[  

          ],
          "groups":[  

          ],
          "scatter":{  

          }
        },
        "enabled":true
      },
      "settings":{  
        "params":{  

        },
        "forms":{  

        }
      },
      "jobName":"paragraph_1489233868646_-2043960998",
      "id":"20160825-120319_1391865547",
      "result":{  
        "code":"SUCCESS",
        "type":"TEXT",
        "msg":"connectedStreams: org.apache.flink.streaming.api.scala.ConnectedStreams[DebsDataItem,Int] = org.apache.flink.streaming.api.scala.ConnectedStreams@12567e3e\nplayerDataSelectionStream: org.apache.flink.streaming.api.scala.DataStream[(Boolean, DebsDataItem)] = org.apache.flink.streaming.api.scala.DataStream@532690f1\n"
      },
      "dateCreated":"2017-03-11T12:04:28+0000",
      "dateStarted":"2017-03-19T19:27:19+0000",
      "dateFinished":"2017-03-19T19:27:23+0000",
      "status":"FINISHED",
      "progressUpdateIntervalMs":500,
      "$$hashKey":"object:298"
    },
    {  
      "text":"%md \n####Linechart",
      "dateUpdated":"2017-03-19T19:26:47+0000",
      "config":{  
        "colWidth":12,
        "editorMode":"ace/mode/markdown",
        "editorHide":true,
        "graph":{  
          "mode":"table",
          "height":300,
          "optionOpen":false,
          "keys":[  

          ],
          "values":[  

          ],
          "groups":[  

          ],
          "scatter":{  

          }
        },
        "enabled":true
      },
      "settings":{  
        "params":{  

        },
        "forms":{  

        }
      },
      "jobName":"paragraph_1489233868646_-2043960998",
      "id":"20160824-174649_1254743247",
      "result":{  
        "code":"SUCCESS",
        "type":"HTML",
        "msg":"<h4>Linechart</h4>\n"
      },
      "dateCreated":"2017-03-11T12:04:28+0000",
      "dateStarted":"2017-03-19T19:26:48+0000",
      "dateFinished":"2017-03-19T19:26:48+0000",
      "status":"FINISHED",
      "progressUpdateIntervalMs":500,
      "$$hashKey":"object:299"
    },
    {  
      "text":"%flink \nvar linechartMetricSelection = new Selection(\"select metric\",List(\"velocity\",\"acceleration\"),\"velocity\")",
      "dateUpdated":"2017-03-19T19:26:48+0000",
      "config":{  
        "colWidth":3,
        "editorMode":"ace/mode/scala",
        "editorHide":false,
        "graph":{  
          "mode":"table",
          "height":300,
          "optionOpen":false,
          "keys":[  

          ],
          "values":[  

          ],
          "groups":[  

          ],
          "scatter":{  

          }
        },
        "enabled":true
      },
      "settings":{  
        "params":{  

        },
        "forms":{  

        }
      },
      "jobName":"paragraph_1489233868646_-2043960998",
      "id":"20160822-105407_1058249252",
      "result":{  
        "code":"SUCCESS",
        "type":"ANGULAR",
        "msg":"\n<style> body {    padding-top: 0px  !important; </style><form class='form-inline'><div class='form-group'><label for='multipleSelect'> {{label}}: </label><br><select class='form-control' name='multipleSelect' id='multipleSelect' ng-model='select'>   <option  ng-repeat='option in options' value='{{option}}'>{{option}}</option></select><br></div></form>\n"
      },
      "dateCreated":"2017-03-11T12:04:28+0000",
      "dateStarted":"2017-03-19T19:27:21+0000",
      "dateFinished":"2017-03-19T19:27:24+0000",
      "status":"FINISHED",
      "progressUpdateIntervalMs":500,
      "$$hashKey":"object:300"
    },
    {  
      "text":"%flink \nvar linechartWindowSelection = new Selection(\"select windowning\",List(\"30s\",\"1min\",\"5min\"),\"1min\")\n",
      "dateUpdated":"2017-03-19T19:26:48+0000",
      "config":{  
        "colWidth":3,
        "editorMode":"ace/mode/scala",
        "editorHide":false,
        "graph":{  
          "mode":"table",
          "height":300,
          "optionOpen":false,
          "keys":[  

          ],
          "values":[  

          ],
          "groups":[  

          ],
          "scatter":{  

          }
        },
        "enabled":true
      },
      "settings":{  
        "params":{  

        },
        "forms":{  

        }
      },
      "jobName":"paragraph_1489233868646_-2043960998",
      "id":"20160824-160916_1475446458",
      "result":{  
        "code":"SUCCESS",
        "type":"ANGULAR",
        "msg":"\n<style> body {    padding-top: 0px  !important; </style><form class='form-inline'><div class='form-group'><label for='multipleSelect'> {{label}}: </label><br><select class='form-control' name='multipleSelect' id='multipleSelect' ng-model='select'>   <option  ng-repeat='option in options' value='{{option}}'>{{option}}</option></select><br></div></form>\n"
      },
      "dateCreated":"2017-03-11T12:04:28+0000",
      "dateStarted":"2017-03-19T19:27:24+0000",
      "dateFinished":"2017-03-19T19:27:25+0000",
      "status":"FINISHED",
      "progressUpdateIntervalMs":500,
      "$$hashKey":"object:301"
    },
    {  
      "text":"%flink \nval linechartMetricSelectionStream = senv.addSource(linechartMetricSelection.getOutputStreamSource)\n                                    .name(\"Linechart metric selection source\");\nval linechartWindowSelectionStream = senv.addSource(linechartWindowSelection.getOutputStreamSource)\n                                    .name(\"Linechart window selection source\");",
      "dateUpdated":"2017-03-19T19:26:49+0000",
      "config":{  
        "colWidth":6,
        "editorMode":"ace/mode/scala",
        "graph":{  
          "mode":"table",
          "height":300,
          "optionOpen":false,
          "keys":[  

          ],
          "values":[  

          ],
          "groups":[  

          ],
          "scatter":{  

          }
        },
        "enabled":true
      },
      "settings":{  
        "params":{  

        },
        "forms":{  

        }
      },
      "jobName":"paragraph_1489233868646_-2043960998",
      "id":"20160824-173304_483054539",
      "result":{  
        "code":"SUCCESS",
        "type":"TEXT",
        "msg":"linechartMetricSelectionStream: org.apache.flink.streaming.api.scala.DataStream[String] = org.apache.flink.streaming.api.scala.DataStream@5d519897\nlinechartWindowSelectionStream: org.apache.flink.streaming.api.scala.DataStream[String] = org.apache.flink.streaming.api.scala.DataStream@22b03204\n"
      },
      "dateCreated":"2017-03-11T12:04:28+0000",
      "dateStarted":"2017-03-19T19:27:24+0000",
      "dateFinished":"2017-03-19T19:27:27+0000",
      "status":"FINISHED",
      "progressUpdateIntervalMs":500,
      "$$hashKey":"object:302"
    },
    {  
      "text":"%flink\nvar linechartStats = new LableUi()",
      "dateUpdated":"2017-03-19T19:26:49+0000",
      "config":{  
        "colWidth":6,
        "editorMode":"ace/mode/html",
        "graph":{  
          "mode":"table",
          "height":300,
          "optionOpen":false,
          "keys":[  

          ],
          "values":[  

          ],
          "groups":[  

          ],
          "scatter":{  

          }
        },
        "enabled":true
      },
      "settings":{  
        "params":{  

        },
        "forms":{  

        }
      },
      "jobName":"paragraph_1489233868646_-2043960998",
      "id":"20161010-091419_1436431982",
      "result":{  
        "code":"SUCCESS",
        "type":"ANGULAR",
        "msg":"\n<style> body {    padding-top: 0px  !important; </style>{{content}}\n"
      },
      "dateCreated":"2017-03-11T12:04:28+0000",
      "dateStarted":"2017-03-19T19:27:26+0000",
      "dateFinished":"2017-03-19T19:27:28+0000",
      "status":"FINISHED",
      "progressUpdateIntervalMs":500,
      "$$hashKey":"object:303"
    },
    {  
      "text":"%flink \nvar linechart = new LineChartUi()",
      "dateUpdated":"2017-03-19T19:26:50+0000",
      "config":{  
        "colWidth":6,
        "editorMode":"ace/mode/scala",
        "editorHide":false,
        "graph":{  
          "mode":"table",
          "height":300,
          "optionOpen":false,
          "keys":[  

          ],
          "values":[  

          ],
          "groups":[  

          ],
          "scatter":{  

          }
        },
        "enabled":true
      },
      "settings":{  
        "params":{  

        },
        "forms":{  

        }
      },
      "jobName":"paragraph_1489233868647_-2044345747",
      "id":"20160821-114515_1240706007",
      "result":{  
        "code":"SUCCESS",
        "type":"ANGULAR",
        "msg":"\n<i2-linechart></i2-linechart>\n"
      },
      "dateCreated":"2017-03-11T12:04:28+0000",
      "dateStarted":"2017-03-19T19:27:27+0000",
      "dateFinished":"2017-03-19T19:27:29+0000",
      "status":"FINISHED",
      "progressUpdateIntervalMs":500,
      "$$hashKey":"object:304"
    },
    {  
      "text":"%flink\nimport org.apache.flink.streaming.api.functions.co.CoFlatMapFunction\nimport org.apache.flink.util.Collector\n\n\nvar filteredStream = playerDataSelectionStream\n                    .filter(player => player._1)\n                    .map(player=>player._2)\n\nval connectedStreams = filteredStream.connect(linechartMetricSelectionStream);\nval metricDataStream = connectedStreams.flatMap {\n    new CoFlatMapFunction[DebsDataItem, String, Tuple2[Long,Int]] {\n        \n        var metric = \"velocity\"\n    \n        override def flatMap2(elem: String, collector: Collector[(Long,Int)]): Unit = {\n            metric = elem\n        }\n\n        override def flatMap1(player: DebsDataItem, collector: Collector[(Long,Int)]): Unit = {\n           \n            metric match {\n                case \"velocity\" => collector.collect((player.ts, player.v))\n                case \"acceleration\" => collector.collect((player.ts, player.a))\n            }\n        }\n    }\n}\n\n// We neet to assign the event time again\nclass DebsTimestampAssigner2 extends AssignerWithPunctuatedWatermarks[(Long,Int)](){\n\n    def\textractTimestamp(element:(Long,Int), previousElementTimestamp:Long):Long = {\n        val ms = element._1 / 1000000000L; // The timestamp profided by the dataset is in picoseconds, so we neet to convert it in milliseconds. \n        ms\n    }\n    \n    def  checkAndGetNextWatermark( lastElement: (Long,Int),  extractedTimestamp: Long): Watermark = {\n        // return the watermark as current time minus the maximum time lag\n\t\treturn new Watermark(extractedTimestamp);\n    }\n}\n\nvar filteredStream = metricDataStream.setParallelism(1).assignTimestampsAndWatermarks(new DebsTimestampAssigner2());\n\nval m4Stream30s = filteredStream.m4(Time.milliseconds(60)).map(item=>(\"30s\",item))\nvar m4Stream1min = filteredStream.m4(Time.milliseconds(120)).map(item=>(\"1min\",item))\nval m4Stream5min = filteredStream.m4(Time.milliseconds(600)).map(item=>(\"5min\",item))\n\nvar unionWindows = m4Stream30s.union(m4Stream1min,m4Stream5min)\nvar connectWithWindowSelection = unionWindows.connect(linechartWindowSelectionStream)\nval linechartDataStream = connectWithWindowSelection.flatMap {\n    new CoFlatMapFunction[(String,(Int,Int,Int,Int,Long)), String, (Int,Int,Int,Int,Long)] {\n        \n        var selectedWindow = \"1min\"\n    \n        override def flatMap2(elem: String, collector:  Collector[(Int,Int,Int,Int,Long)]): Unit = {\n            selectedWindow = elem\n        }\n\n        override def flatMap1(metricItem: (String,(Int,Int,Int,Int,Long)), collector: Collector[(Int,Int,Int,Int,Long)]): Unit = {\n            if(metricItem._1.equals(selectedWindow)){\n                collector.collect(metricItem._2);\n            }\n        }\n    }\n}\n",
      "dateUpdated":"2017-03-19T19:26:50+0000",
      "config":{  
        "colWidth":6,
        "editorMode":"ace/mode/scala",
        "graph":{  
          "mode":"table",
          "height":300,
          "optionOpen":false,
          "keys":[  

          ],
          "values":[  

          ],
          "groups":[  

          ],
          "scatter":{  

          }
        },
        "enabled":true
      },
      "settings":{  
        "params":{  

        },
        "forms":{  

        }
      },
      "jobName":"paragraph_1489233868647_-2044345747",
      "id":"20160823-124717_1486423672",
      "result":{  
        "code":"SUCCESS",
        "type":"TEXT",
        "msg":"import org.apache.flink.streaming.api.functions.co.CoFlatMapFunction\nimport org.apache.flink.util.Collector\nfilteredStream: org.apache.flink.streaming.api.scala.DataStream[DebsDataItem] = org.apache.flink.streaming.api.scala.DataStream@6936a61b\nconnectedStreams: org.apache.flink.streaming.api.scala.ConnectedStreams[DebsDataItem,String] = org.apache.flink.streaming.api.scala.ConnectedStreams@3d33325d\nmetricDataStream: org.apache.flink.streaming.api.scala.DataStream[(Long, Int)] = org.apache.flink.streaming.api.scala.DataStream@3671072c\ndefined class DebsTimestampAssigner2\nfilteredStream: org.apache.flink.streaming.api.scala.DataStream[(Long, Int)] = org.apache.flink.streaming.api.scala.DataStream@1116e63a\nm4Stream30s: org.apache.flink.streaming.api.scala.DataStream[(String, (Int, Int, Int, Int, Long))] = org.apache.flink.streaming.api.scala.DataStream@1d0c6860\nm4Stream1min: org.apache.flink.streaming.api.scala.DataStream[(String, (Int, Int, Int, Int, Long))] = org.apache.flink.streaming.api.scala.DataStream@41fd9740\nm4Stream5min: org.apache.flink.streaming.api.scala.DataStream[(String, (Int, Int, Int, Int, Long))] = org.apache.flink.streaming.api.scala.DataStream@3cbd439c\nunionWindows: org.apache.flink.streaming.api.scala.DataStream[(String, (Int, Int, Int, Int, Long))] = org.apache.flink.streaming.api.scala.DataStream@203f5ee1\nconnectWithWindowSelection: org.apache.flink.streaming.api.scala.ConnectedStreams[(String, (Int, Int, Int, Int, Long)),String] = org.apache.flink.streaming.api.scala.ConnectedStreams@64c241fa\nlinechartDataStream: org.apache.flink.streaming.api.scala.DataStream[(Int, Int, Int, Int, Long)] = org.apache.flink.streaming.api.scala.DataStream@60668fdf\n"
      },
      "dateCreated":"2017-03-11T12:04:28+0000",
      "dateStarted":"2017-03-19T19:27:28+0000",
      "dateFinished":"2017-03-19T19:27:43+0000",
      "status":"FINISHED",
      "progressUpdateIntervalMs":500,
      "$$hashKey":"object:305"
    },
    {  
      "text":"%md \n####Football Field",
      "dateUpdated":"2017-03-19T19:26:51+0000",
      "config":{  
        "colWidth":12,
        "editorMode":"ace/mode/markdown",
        "editorHide":true,
        "graph":{  
          "mode":"table",
          "height":300,
          "optionOpen":false,
          "keys":[  

          ],
          "values":[  

          ],
          "groups":[  

          ],
          "scatter":{  

          }
        },
        "enabled":true
      },
      "settings":{  
        "params":{  

        },
        "forms":{  

        }
      },
      "jobName":"paragraph_1489233868647_-2044345747",
      "id":"20160824-175048_1377829446",
      "result":{  
        "code":"SUCCESS",
        "type":"HTML",
        "msg":"<h4>Football Field</h4>\n"
      },
      "dateCreated":"2017-03-11T12:04:28+0000",
      "dateStarted":"2017-03-19T19:26:51+0000",
      "dateFinished":"2017-03-19T19:26:51+0000",
      "status":"FINISHED",
      "progressUpdateIntervalMs":500,
      "$$hashKey":"object:306"
    },
    {  
      "text":"%flink ",
      "dateUpdated":"2017-03-19T19:26:51+0000",
      "config":{  
        "colWidth":12,
        "graph":{  
          "mode":"table",
          "height":300,
          "optionOpen":false,
          "keys":[  

          ],
          "values":[  

          ],
          "groups":[  

          ],
          "scatter":{  

          }
        },
        "enabled":true,
        "editorMode":"ace/mode/scala"
      },
      "settings":{  
        "params":{  

        },
        "forms":{  

        }
      },
      "jobName":"paragraph_1489412174793_690367090",
      "id":"20170313-133614_546006361",
      "result":{  
        "code":"SUCCESS",
        "type":"TEXT",
        "msg":""
      },
      "dateCreated":"2017-03-13T13:36:14+0000",
      "dateStarted":"2017-03-19T19:27:29+0000",
      "dateFinished":"2017-03-19T19:27:43+0000",
      "status":"FINISHED",
      "progressUpdateIntervalMs":500,
      "$$hashKey":"object:307"
    },
    {  
      "text":"%flink \nvar soccerField = new FootballFieldUi()",
      "dateUpdated":"2017-03-19T19:26:52+0000",
      "config":{  
        "tableHide":false,
        "colWidth":6,
        "editorMode":"ace/mode/scala",
        "editorHide":false,
        "graph":{  
          "mode":"table",
          "height":300,
          "optionOpen":false,
          "keys":[  

          ],
          "values":[  

          ],
          "groups":[  

          ],
          "scatter":{  

          }
        },
        "enabled":true
      },
      "settings":{  
        "params":{  

        },
        "forms":{  

        }
      },
      "jobName":"paragraph_1489233868647_-2044345747",
      "id":"20160810-190726_872539191",
      "result":{  
        "code":"SUCCESS",
        "type":"ANGULAR",
        "msg":"\n<i2-football-field></i2-football-field>\n"
      },
      "dateCreated":"2017-03-11T12:04:28+0000",
      "dateStarted":"2017-03-19T19:27:44+0000",
      "dateFinished":"2017-03-19T19:27:44+0000",
      "status":"FINISHED",
      "progressUpdateIntervalMs":500,
      "$$hashKey":"object:308"
    },
    {  
      "text":"%flink\nvar soccerStats = new LableUi()",
      "dateUpdated":"2017-03-19T19:26:52+0000",
      "config":{  
        "colWidth":6,
        "editorMode":"ace/mode/scala",
        "graph":{  
          "mode":"table",
          "height":300,
          "optionOpen":false,
          "keys":[  

          ],
          "values":[  

          ],
          "groups":[  

          ],
          "scatter":{  

          }
        },
        "enabled":true
      },
      "settings":{  
        "params":{  

        },
        "forms":{  

        }
      },
      "jobName":"paragraph_1489233868647_-2044345747",
      "id":"20161010-091903_1435461225",
      "result":{  
        "code":"SUCCESS",
        "type":"ANGULAR",
        "msg":"\n<style> body {    padding-top: 0px  !important; </style>{{content}}\n"
      },
      "dateCreated":"2017-03-11T12:04:28+0000",
      "dateStarted":"2017-03-19T19:27:44+0000",
      "dateFinished":"2017-03-19T19:27:45+0000",
      "status":"FINISHED",
      "progressUpdateIntervalMs":500,
      "$$hashKey":"object:309"
    },
    {  
      "text":"%flink \nimport org.apache.flink.streaming.api.windowing.assigners._;\n\nvar time = TumblingProcessingTimeWindows.of(Time.milliseconds(100));\nvar fieldStream = playerDataSelectionStream\n    .map(tuple=>(tuple._2.sid, tuple._2.ts, tuple._2.x, tuple._2.y, tuple._1))\n    .keyBy(0)\n    .window(time)\n    .maxBy(1)\n    .map(player=>(player._1, player._3,player._4,player._5 ))\n    .windowAll(time)\n    \nvar fileFold =     fieldStream.fold(List.empty[(Int, Int, Int,Boolean)]) { (acc, v) =>  v :: acc}",
      "dateUpdated":"2017-03-19T19:26:52+0000",
      "config":{  
        "colWidth":6,
        "editorMode":"ace/mode/scala",
        "graph":{  
          "mode":"table",
          "height":300,
          "optionOpen":false,
          "keys":[  

          ],
          "values":[  

          ],
          "groups":[  

          ],
          "scatter":{  

          }
        },
        "enabled":true
      },
      "settings":{  
        "params":{  

        },
        "forms":{  

        }
      },
      "jobName":"paragraph_1489233868647_-2044345747",
      "id":"20160825-203358_1589001090",
      "result":{  
        "code":"SUCCESS",
        "type":"TEXT",
        "msg":"import org.apache.flink.streaming.api.windowing.assigners._\ntime: org.apache.flink.streaming.api.windowing.assigners.TumblingProcessingTimeWindows = TumblingProcessingTimeWindows(100)\nfieldStream: org.apache.flink.streaming.api.scala.AllWindowedStream[(Int, Int, Int, Boolean),org.apache.flink.streaming.api.windowing.windows.TimeWindow] = org.apache.flink.streaming.api.scala.AllWindowedStream@6059b2d3\nfileFold: org.apache.flink.streaming.api.scala.DataStream[List[(Int, Int, Int, Boolean)]] = org.apache.flink.streaming.api.scala.DataStream@69586688\n"
      },
      "dateCreated":"2017-03-11T12:04:28+0000",
      "dateStarted":"2017-03-19T19:27:45+0000",
      "dateFinished":"2017-03-19T19:27:48+0000",
      "status":"FINISHED",
      "progressUpdateIntervalMs":500,
      "$$hashKey":"object:310"
    },
    {  
      "text":"%flink \ntimeStampStream.addSink(ui.getSink)    \ndebsItemDataStream.countItems().addSink(rawStats.getSink()).name(\"Raw Stats\")\nlinechartDataStream.addSink(linechart.getSink).name(\"Linechart\")\nlinechartDataStream.countItems().addSink(linechartStats.getSink).name(\"linechart Stats\")\nfileFold.addSink(soccerField.getSink).name(\"Fotballfield\")\nfileFold.countItems().addSink(soccerStats.getSink).name(\"fotballfields Stats\")\n",
      "dateUpdated":"2017-03-19T19:29:16+0000",
      "config":{  
        "colWidth":12,
        "editorMode":"ace/mode/scala",
        "graph":{  
          "mode":"table",
          "height":300,
          "optionOpen":false,
          "keys":[  

          ],
          "values":[  

          ],
          "groups":[  

          ],
          "scatter":{  

          }
        },
        "enabled":true
      },
      "settings":{  
        "params":{  

        },
        "forms":{  

        }
      },
      "jobName":"paragraph_1489233868647_-2044345747",
      "id":"20161019-160021_1924464366",
      "result":{  
        "code":"SUCCESS",
        "type":"TEXT",
        "msg":"res91: org.apache.flink.streaming.api.datastream.DataStreamSink[String] = org.apache.flink.streaming.api.datastream.DataStreamSink@2f25c892\nres92: org.apache.flink.streaming.api.datastream.DataStreamSink[String] = org.apache.flink.streaming.api.datastream.DataStreamSink@58161afa\nres93: org.apache.flink.streaming.api.datastream.DataStreamSink[(Int, Int, Int, Int, Long)] = org.apache.flink.streaming.api.datastream.DataStreamSink@2ad04ae5\nres94: org.apache.flink.streaming.api.datastream.DataStreamSink[String] = org.apache.flink.streaming.api.datastream.DataStreamSink@27be6ef7\nres95: org.apache.flink.streaming.api.datastream.DataStreamSink[List[(Int, Int, Int, Boolean)]] = org.apache.flink.streaming.api.datastream.DataStreamSink@5aa0233b\nres96: org.apache.flink.streaming.api.datastream.DataStreamSink[String] = org.apache.flink.streaming.api.datastream.DataStreamSink@51a7e6a\n"
      },
      "dateCreated":"2017-03-11T12:04:28+0000",
      "dateStarted":"2017-03-19T19:29:16+0000",
      "dateFinished":"2017-03-19T19:29:20+0000",
      "status":"FINISHED",
      "progressUpdateIntervalMs":500,
      "$$hashKey":"object:311"
    },
    {  
      "text":"%flink \n\nsenv.execute(\"i2 demo\")",
      "dateUpdated":"2017-03-19T19:29:21+0000",
      "config":{  
        "colWidth":12,
        "editorMode":"ace/mode/scala",
        "graph":{  
          "mode":"table",
          "height":300,
          "optionOpen":false,
          "keys":[  

          ],
          "values":[  

          ],
          "groups":[  

          ],
          "scatter":{  

          }
        },
        "enabled":true
      },
      "settings":{  
        "params":{  

        },
        "forms":{  

        }
      },
      "jobName":"paragraph_1489233868647_-2044345747",
      "id":"20160810-182021_2070537316",
      "result":{  
        "code":"ERROR",
        "type":"TEXT",
        "msg":"Submitting job with JobID: ee935945cd99952e5a3fb0beaab2e88c. Waiting for job completion.\n03/19/2017 19:29:33\tJob execution switched to status RUNNING.\n03/19/2017 19:29:33\tSource: Custom Source -> Map -> Timestamps/Watermarks(1/1) switched to SCHEDULED \n03/19/2017 19:29:33\tSource: Custom Source -> Map -> Timestamps/Watermarks(1/1) switched to DEPLOYING \n03/19/2017 19:29:33\tSource: player selection source(1/1) switched to SCHEDULED \n03/19/2017 19:29:33\tSource: player selection source(1/1) switched to DEPLOYING \n03/19/2017 19:29:33\tSource: Linechart metric selection source(1/1) switched to SCHEDULED \n03/19/2017 19:29:33\tSource: Linechart metric selection source(1/1) switched to DEPLOYING \n03/19/2017 19:29:33\tSource: Linechart window selection source(1/1) switched to SCHEDULED \n03/19/2017 19:29:33\tSource: Linechart window selection source(1/1) switched to DEPLOYING \n03/19/2017 19:29:33\tTriggerWindow(TumblingEventTimeWindows(1000), ReducingStateDescriptor{serializer=$line435.$read$$iw$$iw$$iw$$iw$$iw$$iw$$$$$4b64a474beb3955de5f16ae6a24b480$$$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$anon$2$$anon$1@5a243571, reduceFunction=org.apache.flink.streaming.api.functions.aggregation.ComparableAggregator@40daf8dd}, EventTimeTrigger(), WindowedStream.apply(AllWindowedStream.java:326))(1/1) switched to SCHEDULED \n03/19/2017 19:29:33\tTriggerWindow(TumblingEventTimeWindows(1000), ReducingStateDescriptor{serializer=$line435.$read$$iw$$iw$$iw$$iw$$iw$$iw$$$$$4b64a474beb3955de5f16ae6a24b480$$$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$anon$2$$anon$1@5a243571, reduceFunction=org.apache.flink.streaming.api.functions.aggregation.ComparableAggregator@40daf8dd}, EventTimeTrigger(), WindowedStream.apply(AllWindowedStream.java:326))(1/1) switched to DEPLOYING \n03/19/2017 19:29:33\tMap -> Sink: Unnamed(1/1) switched to SCHEDULED \n03/19/2017 19:29:33\tMap -> Sink: Unnamed(1/1) switched to DEPLOYING \n03/19/2017 19:29:33\tMap(1/1) switched to SCHEDULED \n03/19/2017 19:29:33\tMap(1/1) switched to DEPLOYING \n03/19/2017 19:29:33\tTriggerWindow(TumblingProcessingTimeWindows(1000), ReducingStateDescriptor{serializer=$line527.$read$$iw$$iw$$iw$$iw$$iw$$iw$$$$$3d6bf99365a7b76395ee948eff82b$$$$$iw$$iw$Metric$$anon$2$$anon$1@d062f92c, reduceFunction=org.apache.flink.streaming.api.functions.aggregation.SumAggregator@47e332d}, ProcessingTimeTrigger(), WindowedStream.apply(AllWindowedStream.java:326))(1/1) switched to SCHEDULED \n03/19/2017 19:29:33\tTriggerWindow(TumblingProcessingTimeWindows(1000), ReducingStateDescriptor{serializer=$line527.$read$$iw$$iw$$iw$$iw$$iw$$iw$$$$$3d6bf99365a7b76395ee948eff82b$$$$$iw$$iw$Metric$$anon$2$$anon$1@d062f92c, reduceFunction=org.apache.flink.streaming.api.functions.aggregation.SumAggregator@47e332d}, ProcessingTimeTrigger(), WindowedStream.apply(AllWindowedStream.java:326))(1/1) switched to DEPLOYING \n03/19/2017 19:29:33\tMap -> Sink: Raw Stats(1/1) switched to SCHEDULED \n03/19/2017 19:29:33\tMap -> Sink: Raw Stats(1/1) switched to DEPLOYING \n03/19/2017 19:29:33\tCo-Flat Map -> (Filter -> Map, Map)(1/1) switched to SCHEDULED \n03/19/2017 19:29:33\tCo-Flat Map -> (Filter -> Map, Map)(1/1) switched to DEPLOYING \n03/19/2017 19:29:33\tCo-Flat Map -> Timestamps/Watermarks(1/1) switched to SCHEDULED \n03/19/2017 19:29:33\tCo-Flat Map -> Timestamps/Watermarks(1/1) switched to DEPLOYING \n03/19/2017 19:29:33\tTriggerWindow(TumblingEventTimeWindows(60), ReducingStateDescriptor{serializer=$line584.$read$$iw$$iw$$iw$$iw$$iw$$iw$$$$$74db309b2e282854d22549c080809658$$$$iw$$iw$$iw$$iw$$iw$$iw$$anon$2$$anon$1@b447c59d, reduceFunction=org.apache.flink.streaming.api.functions.aggregation.ComparableAggregator@1364054a}, EventTimeTrigger(), WindowedStream.apply(AllWindowedStream.java:326))(1/1) switched to SCHEDULED \n03/19/2017 19:29:33\tTriggerWindow(TumblingEventTimeWindows(60), ReducingStateDescriptor{serializer=$line584.$read$$iw$$iw$$iw$$iw$$iw$$iw$$$$$74db309b2e282854d22549c080809658$$$$iw$$iw$$iw$$iw$$iw$$iw$$anon$2$$anon$1@b447c59d, reduceFunction=org.apache.flink.streaming.api.functions.aggregation.ComparableAggregator@1364054a}, EventTimeTrigger(), WindowedStream.apply(AllWindowedStream.java:326))(1/1) switched to DEPLOYING \n03/19/2017 19:29:33\tMap(1/1) switched to SCHEDULED \n03/19/2017 19:29:33\tMap(1/1) switched to DEPLOYING \n03/19/2017 19:29:33\tTriggerWindow(TumblingEventTimeWindows(60), ReducingStateDescriptor{serializer=$line584.$read$$iw$$iw$$iw$$iw$$iw$$iw$$$$$74db309b2e282854d22549c080809658$$$$iw$$iw$$iw$$iw$$iw$$iw$$anon$2$$anon$1@b447c59d, reduceFunction=org.apache.flink.streaming.api.functions.aggregation.ComparableAggregator@4f240a7e}, EventTimeTrigger(), WindowedStream.apply(AllWindowedStream.java:326))(1/1) switched to SCHEDULED \n03/19/2017 19:29:33\tTriggerWindow(TumblingEventTimeWindows(60), ReducingStateDescriptor{serializer=$line584.$read$$iw$$iw$$iw$$iw$$iw$$iw$$$$$74db309b2e282854d22549c080809658$$$$iw$$iw$$iw$$iw$$iw$$iw$$anon$2$$anon$1@b447c59d, reduceFunction=org.apache.flink.streaming.api.functions.aggregation.ComparableAggregator@4f240a7e}, EventTimeTrigger(), WindowedStream.apply(AllWindowedStream.java:326))(1/1) switched to DEPLOYING \n03/19/2017 19:29:33\tMap(1/1) switched to SCHEDULED \n03/19/2017 19:29:33\tMap(1/1) switched to DEPLOYING \n03/19/2017 19:29:33\tTriggerWindow(TumblingEventTimeWindows(60), ReducingStateDescriptor{serializer=$line584.$read$$iw$$iw$$iw$$iw$$iw$$iw$$$$$74db309b2e282854d22549c080809658$$$$iw$$iw$$iw$$iw$$iw$$iw$$anon$2$$anon$1@b447c59d, reduceFunction=org.apache.flink.streaming.api.functions.aggregation.ComparableAggregator@6a784efd}, EventTimeTrigger(), WindowedStream.apply(AllWindowedStream.java:326))(1/1) switched to SCHEDULED \n03/19/2017 19:29:33\tTriggerWindow(TumblingEventTimeWindows(60), ReducingStateDescriptor{serializer=$line584.$read$$iw$$iw$$iw$$iw$$iw$$iw$$$$$74db309b2e282854d22549c080809658$$$$iw$$iw$$iw$$iw$$iw$$iw$$anon$2$$anon$1@b447c59d, reduceFunction=org.apache.flink.streaming.api.functions.aggregation.ComparableAggregator@6a784efd}, EventTimeTrigger(), WindowedStream.apply(AllWindowedStream.java:326))(1/1) switched to DEPLOYING \n03/19/2017 19:29:33\tMap(1/1) switched to SCHEDULED \n03/19/2017 19:29:33\tMap(1/1) switched to DEPLOYING \n03/19/2017 19:29:33\tTriggerWindow(TumblingEventTimeWindows(60), ReducingStateDescriptor{serializer=$line584.$read$$iw$$iw$$iw$$iw$$iw$$iw$$$$$74db309b2e282854d22549c080809658$$$$iw$$iw$$iw$$iw$$iw$$iw$$anon$2$$anon$1@b447c59d, reduceFunction=org.apache.flink.streaming.api.functions.aggregation.ComparableAggregator@4ae9b766}, EventTimeTrigger(), WindowedStream.apply(AllWindowedStream.java:326))(1/1) switched to SCHEDULED \n03/19/2017 19:29:33\tTriggerWindow(TumblingEventTimeWindows(60), ReducingStateDescriptor{serializer=$line584.$read$$iw$$iw$$iw$$iw$$iw$$iw$$$$$74db309b2e282854d22549c080809658$$$$iw$$iw$$iw$$iw$$iw$$iw$$anon$2$$anon$1@b447c59d, reduceFunction=org.apache.flink.streaming.api.functions.aggregation.ComparableAggregator@4ae9b766}, EventTimeTrigger(), WindowedStream.apply(AllWindowedStream.java:326))(1/1) switched to DEPLOYING \n03/19/2017 19:29:33\tMap(1/1) switched to SCHEDULED \n03/19/2017 19:29:33\tMap(1/1) switched to DEPLOYING \n03/19/2017 19:29:33\tTriggerWindow(TumblingEventTimeWindows(60), FoldingStateDescriptor{serializer=null, initialValue=(-100,-100,-100,-100,-100), foldFunction=org.apache.flink.streaming.api.scala.function.util.ScalaFoldFunction@3fb1a403}, EventTimeTrigger(), WindowedStream.fold(AllWindowedStream.java:223))(1/1) switched to SCHEDULED \n03/19/2017 19:29:33\tTriggerWindow(TumblingEventTimeWindows(60), FoldingStateDescriptor{serializer=null, initialValue=(-100,-100,-100,-100,-100), foldFunction=org.apache.flink.streaming.api.scala.function.util.ScalaFoldFunction@3fb1a403}, EventTimeTrigger(), WindowedStream.fold(AllWindowedStream.java:223))(1/1) switched to DEPLOYING \n03/19/2017 19:29:33\tMap(1/1) switched to SCHEDULED \n03/19/2017 19:29:33\tMap(1/1) switched to DEPLOYING \n03/19/2017 19:29:33\tTriggerWindow(TumblingEventTimeWindows(120), ReducingStateDescriptor{serializer=$line584.$read$$iw$$iw$$iw$$iw$$iw$$iw$$$$$74db309b2e282854d22549c080809658$$$$iw$$iw$$iw$$iw$$iw$$iw$$anon$2$$anon$1@b447c59d, reduceFunction=org.apache.flink.streaming.api.functions.aggregation.ComparableAggregator@42a170ae}, EventTimeTrigger(), WindowedStream.apply(AllWindowedStream.java:326))(1/1) switched to SCHEDULED \n03/19/2017 19:29:33\tTriggerWindow(TumblingEventTimeWindows(120), ReducingStateDescriptor{serializer=$line584.$read$$iw$$iw$$iw$$iw$$iw$$iw$$$$$74db309b2e282854d22549c080809658$$$$iw$$iw$$iw$$iw$$iw$$iw$$anon$2$$anon$1@b447c59d, reduceFunction=org.apache.flink.streaming.api.functions.aggregation.ComparableAggregator@42a170ae}, EventTimeTrigger(), WindowedStream.apply(AllWindowedStream.java:326))(1/1) switched to DEPLOYING \n03/19/2017 19:29:33\tMap(1/1) switched to SCHEDULED \n03/19/2017 19:29:33\tMap(1/1) switched to DEPLOYING \n03/19/2017 19:29:33\tTriggerWindow(TumblingEventTimeWindows(120), ReducingStateDescriptor{serializer=$line584.$read$$iw$$iw$$iw$$iw$$iw$$iw$$$$$74db309b2e282854d22549c080809658$$$$iw$$iw$$iw$$iw$$iw$$iw$$anon$2$$anon$1@b447c59d, reduceFunction=org.apache.flink.streaming.api.functions.aggregation.ComparableAggregator@7d98c1f}, EventTimeTrigger(), WindowedStream.apply(AllWindowedStream.java:326))(1/1) switched to SCHEDULED \n03/19/2017 19:29:33\tTriggerWindow(TumblingEventTimeWindows(120), ReducingStateDescriptor{serializer=$line584.$read$$iw$$iw$$iw$$iw$$iw$$iw$$$$$74db309b2e282854d22549c080809658$$$$iw$$iw$$iw$$iw$$iw$$iw$$anon$2$$anon$1@b447c59d, reduceFunction=org.apache.flink.streaming.api.functions.aggregation.ComparableAggregator@7d98c1f}, EventTimeTrigger(), WindowedStream.apply(AllWindowedStream.java:326))(1/1) switched to DEPLOYING \n03/19/2017 19:29:33\tMap(1/1) switched to SCHEDULED \n03/19/2017 19:29:33\tMap(1/1) switched to DEPLOYING \n03/19/2017 19:29:33\tTriggerWindow(TumblingEventTimeWindows(120), ReducingStateDescriptor{serializer=$line584.$read$$iw$$iw$$iw$$iw$$iw$$iw$$$$$74db309b2e282854d22549c080809658$$$$iw$$iw$$iw$$iw$$iw$$iw$$anon$2$$anon$1@b447c59d, reduceFunction=org.apache.flink.streaming.api.functions.aggregation.ComparableAggregator@43486e32}, EventTimeTrigger(), WindowedStream.apply(AllWindowedStream.java:326))(1/1) switched to SCHEDULED \n03/19/2017 19:29:33\tTriggerWindow(TumblingEventTimeWindows(120), ReducingStateDescriptor{serializer=$line584.$read$$iw$$iw$$iw$$iw$$iw$$iw$$$$$74db309b2e282854d22549c080809658$$$$iw$$iw$$iw$$iw$$iw$$iw$$anon$2$$anon$1@b447c59d, reduceFunction=org.apache.flink.streaming.api.functions.aggregation.ComparableAggregator@43486e32}, EventTimeTrigger(), WindowedStream.apply(AllWindowedStream.java:326))(1/1) switched to DEPLOYING \n03/19/2017 19:29:33\tMap(1/1) switched to SCHEDULED \n03/19/2017 19:29:33\tMap(1/1) switched to DEPLOYING \n03/19/2017 19:29:33\tTriggerWindow(TumblingEventTimeWindows(120), ReducingStateDescriptor{serializer=$line584.$read$$iw$$iw$$iw$$iw$$iw$$iw$$$$$74db309b2e282854d22549c080809658$$$$iw$$iw$$iw$$iw$$iw$$iw$$anon$2$$anon$1@b447c59d, reduceFunction=org.apache.flink.streaming.api.functions.aggregation.ComparableAggregator@781e3a01}, EventTimeTrigger(), WindowedStream.apply(AllWindowedStream.java:326))(1/1) switched to SCHEDULED \n03/19/2017 19:29:33\tTriggerWindow(TumblingEventTimeWindows(120), ReducingStateDescriptor{serializer=$line584.$read$$iw$$iw$$iw$$iw$$iw$$iw$$$$$74db309b2e282854d22549c080809658$$$$iw$$iw$$iw$$iw$$iw$$iw$$anon$2$$anon$1@b447c59d, reduceFunction=org.apache.flink.streaming.api.functions.aggregation.ComparableAggregator@781e3a01}, EventTimeTrigger(), WindowedStream.apply(AllWindowedStream.java:326))(1/1) switched to DEPLOYING \n03/19/2017 19:29:33\tMap(1/1) switched to SCHEDULED \n03/19/2017 19:29:33\tMap(1/1) switched to DEPLOYING \n03/19/2017 19:29:33\tTriggerWindow(TumblingEventTimeWindows(120), FoldingStateDescriptor{serializer=null, initialValue=(-100,-100,-100,-100,-100), foldFunction=org.apache.flink.streaming.api.scala.function.util.ScalaFoldFunction@4c775e5c}, EventTimeTrigger(), WindowedStream.fold(AllWindowedStream.java:223))(1/1) switched to SCHEDULED \n03/19/2017 19:29:33\tTriggerWindow(TumblingEventTimeWindows(120), FoldingStateDescriptor{serializer=null, initialValue=(-100,-100,-100,-100,-100), foldFunction=org.apache.flink.streaming.api.scala.function.util.ScalaFoldFunction@4c775e5c}, EventTimeTrigger(), WindowedStream.fold(AllWindowedStream.java:223))(1/1) switched to DEPLOYING \n03/19/2017 19:29:33\tMap(1/1) switched to SCHEDULED \n03/19/2017 19:29:33\tMap(1/1) switched to DEPLOYING \n03/19/2017 19:29:33\tTriggerWindow(TumblingEventTimeWindows(600), ReducingStateDescriptor{serializer=$line584.$read$$iw$$iw$$iw$$iw$$iw$$iw$$$$$74db309b2e282854d22549c080809658$$$$iw$$iw$$iw$$iw$$iw$$iw$$anon$2$$anon$1@b447c59d, reduceFunction=org.apache.flink.streaming.api.functions.aggregation.ComparableAggregator@1530911b}, EventTimeTrigger(), WindowedStream.apply(AllWindowedStream.java:326))(1/1) switched to SCHEDULED \n03/19/2017 19:29:33\tTriggerWindow(TumblingEventTimeWindows(600), ReducingStateDescriptor{serializer=$line584.$read$$iw$$iw$$iw$$iw$$iw$$iw$$$$$74db309b2e282854d22549c080809658$$$$iw$$iw$$iw$$iw$$iw$$iw$$anon$2$$anon$1@b447c59d, reduceFunction=org.apache.flink.streaming.api.functions.aggregation.ComparableAggregator@1530911b}, EventTimeTrigger(), WindowedStream.apply(AllWindowedStream.java:326))(1/1) switched to DEPLOYING \n03/19/2017 19:29:33\tMap(1/1) switched to SCHEDULED \n03/19/2017 19:29:33\tMap(1/1) switched to DEPLOYING \n03/19/2017 19:29:33\tTriggerWindow(TumblingEventTimeWindows(600), ReducingStateDescriptor{serializer=$line584.$read$$iw$$iw$$iw$$iw$$iw$$iw$$$$$74db309b2e282854d22549c080809658$$$$iw$$iw$$iw$$iw$$iw$$iw$$anon$2$$anon$1@b447c59d, reduceFunction=org.apache.flink.streaming.api.functions.aggregation.ComparableAggregator@45709065}, EventTimeTrigger(), WindowedStream.apply(AllWindowedStream.java:326))(1/1) switched to SCHEDULED \n03/19/2017 19:29:33\tTriggerWindow(TumblingEventTimeWindows(600), ReducingStateDescriptor{serializer=$line584.$read$$iw$$iw$$iw$$iw$$iw$$iw$$$$$74db309b2e282854d22549c080809658$$$$iw$$iw$$iw$$iw$$iw$$iw$$anon$2$$anon$1@b447c59d, reduceFunction=org.apache.flink.streaming.api.functions.aggregation.ComparableAggregator@45709065}, EventTimeTrigger(), WindowedStream.apply(AllWindowedStream.java:326))(1/1) switched to DEPLOYING \n03/19/2017 19:29:33\tMap(1/1) switched to SCHEDULED \n03/19/2017 19:29:33\tMap(1/1) switched to DEPLOYING \n03/19/2017 19:29:33\tTriggerWindow(TumblingEventTimeWindows(600), ReducingStateDescriptor{serializer=$line584.$read$$iw$$iw$$iw$$iw$$iw$$iw$$$$$74db309b2e282854d22549c080809658$$$$iw$$iw$$iw$$iw$$iw$$iw$$anon$2$$anon$1@b447c59d, reduceFunction=org.apache.flink.streaming.api.functions.aggregation.ComparableAggregator@71e9287a}, EventTimeTrigger(), WindowedStream.apply(AllWindowedStream.java:326))(1/1) switched to SCHEDULED \n03/19/2017 19:29:33\tTriggerWindow(TumblingEventTimeWindows(600), ReducingStateDescriptor{serializer=$line584.$read$$iw$$iw$$iw$$iw$$iw$$iw$$$$$74db309b2e282854d22549c080809658$$$$iw$$iw$$iw$$iw$$iw$$iw$$anon$2$$anon$1@b447c59d, reduceFunction=org.apache.flink.streaming.api.functions.aggregation.ComparableAggregator@71e9287a}, EventTimeTrigger(), WindowedStream.apply(AllWindowedStream.java:326))(1/1) switched to DEPLOYING \n03/19/2017 19:29:33\tMap(1/1) switched to SCHEDULED \n03/19/2017 19:29:33\tMap(1/1) switched to DEPLOYING \n03/19/2017 19:29:33\tTriggerWindow(TumblingEventTimeWindows(600), ReducingStateDescriptor{serializer=$line584.$read$$iw$$iw$$iw$$iw$$iw$$iw$$$$$74db309b2e282854d22549c080809658$$$$iw$$iw$$iw$$iw$$iw$$iw$$anon$2$$anon$1@b447c59d, reduceFunction=org.apache.flink.streaming.api.functions.aggregation.ComparableAggregator@74dae48b}, EventTimeTrigger(), WindowedStream.apply(AllWindowedStream.java:326))(1/1) switched to SCHEDULED \n03/19/2017 19:29:33\tTriggerWindow(TumblingEventTimeWindows(600), ReducingStateDescriptor{serializer=$line584.$read$$iw$$iw$$iw$$iw$$iw$$iw$$$$$74db309b2e282854d22549c080809658$$$$iw$$iw$$iw$$iw$$iw$$iw$$anon$2$$anon$1@b447c59d, reduceFunction=org.apache.flink.streaming.api.functions.aggregation.ComparableAggregator@74dae48b}, EventTimeTrigger(), WindowedStream.apply(AllWindowedStream.java:326))(1/1) switched to DEPLOYING \n03/19/2017 19:29:33\tMap(1/1) switched to SCHEDULED \n03/19/2017 19:29:33\tMap(1/1) switched to DEPLOYING \n03/19/2017 19:29:33\tTriggerWindow(TumblingEventTimeWindows(600), FoldingStateDescriptor{serializer=null, initialValue=(-100,-100,-100,-100,-100), foldFunction=org.apache.flink.streaming.api.scala.function.util.ScalaFoldFunction@2e0fcd65}, EventTimeTrigger(), WindowedStream.fold(AllWindowedStream.java:223))(1/1) switched to SCHEDULED \n03/19/2017 19:29:33\tTriggerWindow(TumblingEventTimeWindows(600), FoldingStateDescriptor{serializer=null, initialValue=(-100,-100,-100,-100,-100), foldFunction=org.apache.flink.streaming.api.scala.function.util.ScalaFoldFunction@2e0fcd65}, EventTimeTrigger(), WindowedStream.fold(AllWindowedStream.java:223))(1/1) switched to DEPLOYING \n03/19/2017 19:29:34\tMap(1/1) switched to SCHEDULED \n03/19/2017 19:29:34\tMap(1/1) switched to DEPLOYING \n03/19/2017 19:29:34\tCo-Flat Map -> (Sink: Linechart, Map)(1/1) switched to SCHEDULED \n03/19/2017 19:29:34\tCo-Flat Map -> (Sink: Linechart, Map)(1/1) switched to DEPLOYING \n03/19/2017 19:29:34\tTriggerWindow(TumblingProcessingTimeWindows(1000), ReducingStateDescriptor{serializer=$line527.$read$$iw$$iw$$iw$$iw$$iw$$iw$$$$$3d6bf99365a7b76395ee948eff82b$$$$$iw$$iw$Metric$$anon$2$$anon$1@d062f92c, reduceFunction=org.apache.flink.streaming.api.functions.aggregation.SumAggregator@22a2e0d9}, ProcessingTimeTrigger(), WindowedStream.apply(AllWindowedStream.java:326))(1/1) switched to SCHEDULED \n03/19/2017 19:29:34\tTriggerWindow(TumblingProcessingTimeWindows(1000), ReducingStateDescriptor{serializer=$line527.$read$$iw$$iw$$iw$$iw$$iw$$iw$$$$$3d6bf99365a7b76395ee948eff82b$$$$$iw$$iw$Metric$$anon$2$$anon$1@d062f92c, reduceFunction=org.apache.flink.streaming.api.functions.aggregation.SumAggregator@22a2e0d9}, ProcessingTimeTrigger(), WindowedStream.apply(AllWindowedStream.java:326))(1/1) switched to DEPLOYING \n03/19/2017 19:29:34\tMap -> Sink: linechart Stats(1/1) switched to SCHEDULED \n03/19/2017 19:29:34\tMap -> Sink: linechart Stats(1/1) switched to DEPLOYING \n03/19/2017 19:29:34\tFast TumblingProcessingTimeWindows(100) of WindowedStream.aggregate(WindowedStream.scala:428) -> Map(1/1) switched to SCHEDULED \n03/19/2017 19:29:34\tFast TumblingProcessingTimeWindows(100) of WindowedStream.aggregate(WindowedStream.scala:428) -> Map(1/1) switched to DEPLOYING \n03/19/2017 19:29:34\tTriggerWindow(TumblingProcessingTimeWindows(100), FoldingStateDescriptor{serializer=null, initialValue=List(), foldFunction=org.apache.flink.streaming.api.scala.function.util.ScalaFoldFunction@4875ea92}, ProcessingTimeTrigger(), WindowedStream.fold(AllWindowedStream.java:223))(1/1) switched to SCHEDULED \n03/19/2017 19:29:34\tTriggerWindow(TumblingProcessingTimeWindows(100), FoldingStateDescriptor{serializer=null, initialValue=List(), foldFunction=org.apache.flink.streaming.api.scala.function.util.ScalaFoldFunction@4875ea92}, ProcessingTimeTrigger(), WindowedStream.fold(AllWindowedStream.java:223))(1/1) switched to DEPLOYING \n03/19/2017 19:29:34\tSink: Fotballfield(1/1) switched to SCHEDULED \n03/19/2017 19:29:34\tSink: Fotballfield(1/1) switched to DEPLOYING \n03/19/2017 19:29:34\tMap(1/1) switched to SCHEDULED \n03/19/2017 19:29:34\tMap(1/1) switched to DEPLOYING \n03/19/2017 19:29:34\tTriggerWindow(TumblingProcessingTimeWindows(1000), ReducingStateDescriptor{serializer=$line527.$read$$iw$$iw$$iw$$iw$$iw$$iw$$$$$3d6bf99365a7b76395ee948eff82b$$$$$iw$$iw$Metric$$anon$2$$anon$1@d062f92c, reduceFunction=org.apache.flink.streaming.api.functions.aggregation.SumAggregator@3bbbff31}, ProcessingTimeTrigger(), WindowedStream.apply(AllWindowedStream.java:326))(1/1) switched to SCHEDULED \n03/19/2017 19:29:34\tTriggerWindow(TumblingProcessingTimeWindows(1000), ReducingStateDescriptor{serializer=$line527.$read$$iw$$iw$$iw$$iw$$iw$$iw$$$$$3d6bf99365a7b76395ee948eff82b$$$$$iw$$iw$Metric$$anon$2$$anon$1@d062f92c, reduceFunction=org.apache.flink.streaming.api.functions.aggregation.SumAggregator@3bbbff31}, ProcessingTimeTrigger(), WindowedStream.apply(AllWindowedStream.java:326))(1/1) switched to DEPLOYING \n03/19/2017 19:29:34\tMap -> Sink: fotballfields Stats(1/1) switched to SCHEDULED \n03/19/2017 19:29:34\tMap -> Sink: fotballfields Stats(1/1) switched to DEPLOYING \n03/19/2017 19:29:34\tTriggerWindow(TumblingEventTimeWindows(120), ReducingStateDescriptor{serializer=$line584.$read$$iw$$iw$$iw$$iw$$iw$$iw$$$$$74db309b2e282854d22549c080809658$$$$iw$$iw$$iw$$iw$$iw$$iw$$anon$2$$anon$1@b447c59d, reduceFunction=org.apache.flink.streaming.api.functions.aggregation.ComparableAggregator@43486e32}, EventTimeTrigger(), WindowedStream.apply(AllWindowedStream.java:326))(1/1) switched to RUNNING \n03/19/2017 19:29:34\tTriggerWindow(TumblingEventTimeWindows(60), FoldingStateDescriptor{serializer=null, initialValue=(-100,-100,-100,-100,-100), foldFunction=org.apache.flink.streaming.api.scala.function.util.ScalaFoldFunction@3fb1a403}, EventTimeTrigger(), WindowedStream.fold(AllWindowedStream.java:223))(1/1) switched to RUNNING \n03/19/2017 19:29:34\tMap(1/1) switched to RUNNING \n03/19/2017 19:29:34\tTriggerWindow(TumblingEventTimeWindows(60), ReducingStateDescriptor{serializer=$line584.$read$$iw$$iw$$iw$$iw$$iw$$iw$$$$$74db309b2e282854d22549c080809658$$$$iw$$iw$$iw$$iw$$iw$$iw$$anon$2$$anon$1@b447c59d, reduceFunction=org.apache.flink.streaming.api.functions.aggregation.ComparableAggregator@4ae9b766}, EventTimeTrigger(), WindowedStream.apply(AllWindowedStream.java:326))(1/1) switched to RUNNING \n03/19/2017 19:29:34\tMap(1/1) switched to RUNNING \n03/19/2017 19:29:34\tTriggerWindow(TumblingEventTimeWindows(120), ReducingStateDescriptor{serializer=$line584.$read$$iw$$iw$$iw$$iw$$iw$$iw$$$$$74db309b2e282854d22549c080809658$$$$iw$$iw$$iw$$iw$$iw$$iw$$anon$2$$anon$1@b447c59d, reduceFunction=org.apache.flink.streaming.api.functions.aggregation.ComparableAggregator@7d98c1f}, EventTimeTrigger(), WindowedStream.apply(AllWindowedStream.java:326))(1/1) switched to RUNNING \n03/19/2017 19:29:34\tMap(1/1) switched to RUNNING \n03/19/2017 19:29:34\tTriggerWindow(TumblingEventTimeWindows(60), ReducingStateDescriptor{serializer=$line584.$read$$iw$$iw$$iw$$iw$$iw$$iw$$$$$74db309b2e282854d22549c080809658$$$$iw$$iw$$iw$$iw$$iw$$iw$$anon$2$$anon$1@b447c59d, reduceFunction=org.apache.flink.streaming.api.functions.aggregation.ComparableAggregator@6a784efd}, EventTimeTrigger(), WindowedStream.apply(AllWindowedStream.java:326))(1/1) switched to RUNNING \n03/19/2017 19:29:34\tTriggerWindow(TumblingEventTimeWindows(60), ReducingStateDescriptor{serializer=$line584.$read$$iw$$iw$$iw$$iw$$iw$$iw$$$$$74db309b2e282854d22549c080809658$$$$iw$$iw$$iw$$iw$$iw$$iw$$anon$2$$anon$1@b447c59d, reduceFunction=org.apache.flink.streaming.api.functions.aggregation.ComparableAggregator@4f240a7e}, EventTimeTrigger(), WindowedStream.apply(AllWindowedStream.java:326))(1/1) switched to RUNNING \n03/19/2017 19:29:34\tMap(1/1) switched to RUNNING \n03/19/2017 19:29:34\tTriggerWindow(TumblingEventTimeWindows(120), ReducingStateDescriptor{serializer=$line584.$read$$iw$$iw$$iw$$iw$$iw$$iw$$$$$74db309b2e282854d22549c080809658$$$$iw$$iw$$iw$$iw$$iw$$iw$$anon$2$$anon$1@b447c59d, reduceFunction=org.apache.flink.streaming.api.functions.aggregation.ComparableAggregator@781e3a01}, EventTimeTrigger(), WindowedStream.apply(AllWindowedStream.java:326))(1/1) switched to RUNNING \n03/19/2017 19:29:34\tTriggerWindow(TumblingEventTimeWindows(60), ReducingStateDescriptor{serializer=$line584.$read$$iw$$iw$$iw$$iw$$iw$$iw$$$$$74db309b2e282854d22549c080809658$$$$iw$$iw$$iw$$iw$$iw$$iw$$anon$2$$anon$1@b447c59d, reduceFunction=org.apache.flink.streaming.api.functions.aggregation.ComparableAggregator@1364054a}, EventTimeTrigger(), WindowedStream.apply(AllWindowedStream.java:326))(1/1) switched to RUNNING \n03/19/2017 19:29:34\tMap(1/1) switched to RUNNING \n03/19/2017 19:29:34\tMap -> Sink: Raw Stats(1/1) switched to RUNNING \n03/19/2017 19:29:34\tMap(1/1) switched to RUNNING \n03/19/2017 19:29:34\tMap -> Sink: Unnamed(1/1) switched to RUNNING \n03/19/2017 19:29:34\tTriggerWindow(TumblingEventTimeWindows(1000), ReducingStateDescriptor{serializer=$line435.$read$$iw$$iw$$iw$$iw$$iw$$iw$$$$$4b64a474beb3955de5f16ae6a24b480$$$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$anon$2$$anon$1@5a243571, reduceFunction=org.apache.flink.streaming.api.functions.aggregation.ComparableAggregator@40daf8dd}, EventTimeTrigger(), WindowedStream.apply(AllWindowedStream.java:326))(1/1) switched to RUNNING \n03/19/2017 19:29:34\tMap(1/1) switched to RUNNING \n03/19/2017 19:29:34\tMap(1/1) switched to RUNNING \n03/19/2017 19:29:34\tTriggerWindow(TumblingEventTimeWindows(120), ReducingStateDescriptor{serializer=$line584.$read$$iw$$iw$$iw$$iw$$iw$$iw$$$$$74db309b2e282854d22549c080809658$$$$iw$$iw$$iw$$iw$$iw$$iw$$anon$2$$anon$1@b447c59d, reduceFunction=org.apache.flink.streaming.api.functions.aggregation.ComparableAggregator@42a170ae}, EventTimeTrigger(), WindowedStream.apply(AllWindowedStream.java:326))(1/1) switched to RUNNING \n03/19/2017 19:29:34\tTriggerWindow(TumblingProcessingTimeWindows(1000), ReducingStateDescriptor{serializer=$line527.$read$$iw$$iw$$iw$$iw$$iw$$iw$$$$$3d6bf99365a7b76395ee948eff82b$$$$$iw$$iw$Metric$$anon$2$$anon$1@d062f92c, reduceFunction=org.apache.flink.streaming.api.functions.aggregation.SumAggregator@47e332d}, ProcessingTimeTrigger(), WindowedStream.apply(AllWindowedStream.java:326))(1/1) switched to RUNNING \n03/19/2017 19:29:34\tMap(1/1) switched to RUNNING \n03/19/2017 19:29:34\tTriggerWindow(TumblingEventTimeWindows(120), FoldingStateDescriptor{serializer=null, initialValue=(-100,-100,-100,-100,-100), foldFunction=org.apache.flink.streaming.api.scala.function.util.ScalaFoldFunction@4c775e5c}, EventTimeTrigger(), WindowedStream.fold(AllWindowedStream.java:223))(1/1) switched to RUNNING \n03/19/2017 19:29:34\tSource: Custom Source -> Map -> Timestamps/Watermarks(1/1) switched to RUNNING \n03/19/2017 19:29:34\tMap(1/1) switched to RUNNING \n03/19/2017 19:29:34\tMap(1/1) switched to RUNNING \n03/19/2017 19:29:34\tTriggerWindow(TumblingEventTimeWindows(600), ReducingStateDescriptor{serializer=$line584.$read$$iw$$iw$$iw$$iw$$iw$$iw$$$$$74db309b2e282854d22549c080809658$$$$iw$$iw$$iw$$iw$$iw$$iw$$anon$2$$anon$1@b447c59d, reduceFunction=org.apache.flink.streaming.api.functions.aggregation.ComparableAggregator@45709065}, EventTimeTrigger(), WindowedStream.apply(AllWindowedStream.java:326))(1/1) switched to RUNNING \n03/19/2017 19:29:34\tMap(1/1) switched to RUNNING \n03/19/2017 19:29:34\tTriggerWindow(TumblingEventTimeWindows(600), ReducingStateDescriptor{serializer=$line584.$read$$iw$$iw$$iw$$iw$$iw$$iw$$$$$74db309b2e282854d22549c080809658$$$$iw$$iw$$iw$$iw$$iw$$iw$$anon$2$$anon$1@b447c59d, reduceFunction=org.apache.flink.streaming.api.functions.aggregation.ComparableAggregator@1530911b}, EventTimeTrigger(), WindowedStream.apply(AllWindowedStream.java:326))(1/1) switched to RUNNING \n03/19/2017 19:29:34\tTriggerWindow(TumblingEventTimeWindows(600), FoldingStateDescriptor{serializer=null, initialValue=(-100,-100,-100,-100,-100), foldFunction=org.apache.flink.streaming.api.scala.function.util.ScalaFoldFunction@2e0fcd65}, EventTimeTrigger(), WindowedStream.fold(AllWindowedStream.java:223))(1/1) switched to RUNNING \n03/19/2017 19:29:34\tMap(1/1) switched to RUNNING \n03/19/2017 19:29:34\tTriggerWindow(TumblingEventTimeWindows(600), ReducingStateDescriptor{serializer=$line584.$read$$iw$$iw$$iw$$iw$$iw$$iw$$$$$74db309b2e282854d22549c080809658$$$$iw$$iw$$iw$$iw$$iw$$iw$$anon$2$$anon$1@b447c59d, reduceFunction=org.apache.flink.streaming.api.functions.aggregation.ComparableAggregator@74dae48b}, EventTimeTrigger(), WindowedStream.apply(AllWindowedStream.java:326))(1/1) switched to RUNNING \n03/19/2017 19:29:34\tTriggerWindow(TumblingEventTimeWindows(600), ReducingStateDescriptor{serializer=$line584.$read$$iw$$iw$$iw$$iw$$iw$$iw$$$$$74db309b2e282854d22549c080809658$$$$iw$$iw$$iw$$iw$$iw$$iw$$anon$2$$anon$1@b447c59d, reduceFunction=org.apache.flink.streaming.api.functions.aggregation.ComparableAggregator@71e9287a}, EventTimeTrigger(), WindowedStream.apply(AllWindowedStream.java:326))(1/1) switched to RUNNING \n03/19/2017 19:29:34\tMap(1/1) switched to RUNNING \n03/19/2017 19:29:34\tMap(1/1) switched to RUNNING \n03/19/2017 19:29:34\tMap -> Sink: linechart Stats(1/1) switched to RUNNING \n03/19/2017 19:29:34\tTriggerWindow(TumblingProcessingTimeWindows(1000), ReducingStateDescriptor{serializer=$line527.$read$$iw$$iw$$iw$$iw$$iw$$iw$$$$$3d6bf99365a7b76395ee948eff82b$$$$$iw$$iw$Metric$$anon$2$$anon$1@d062f92c, reduceFunction=org.apache.flink.streaming.api.functions.aggregation.SumAggregator@22a2e0d9}, ProcessingTimeTrigger(), WindowedStream.apply(AllWindowedStream.java:326))(1/1) switched to RUNNING \n03/19/2017 19:29:34\tFast TumblingProcessingTimeWindows(100) of WindowedStream.aggregate(WindowedStream.scala:428) -> Map(1/1) switched to RUNNING \n03/19/2017 19:29:34\tTriggerWindow(TumblingProcessingTimeWindows(100), FoldingStateDescriptor{serializer=null, initialValue=List(), foldFunction=org.apache.flink.streaming.api.scala.function.util.ScalaFoldFunction@4875ea92}, ProcessingTimeTrigger(), WindowedStream.fold(AllWindowedStream.java:223))(1/1) switched to RUNNING \n03/19/2017 19:29:34\tSink: Fotballfield(1/1) switched to RUNNING \n03/19/2017 19:29:34\tMap(1/1) switched to RUNNING \n03/19/2017 19:29:34\tTriggerWindow(TumblingProcessingTimeWindows(1000), ReducingStateDescriptor{serializer=$line527.$read$$iw$$iw$$iw$$iw$$iw$$iw$$$$$3d6bf99365a7b76395ee948eff82b$$$$$iw$$iw$Metric$$anon$2$$anon$1@d062f92c, reduceFunction=org.apache.flink.streaming.api.functions.aggregation.SumAggregator@3bbbff31}, ProcessingTimeTrigger(), WindowedStream.apply(AllWindowedStream.java:326))(1/1) switched to RUNNING \n03/19/2017 19:29:34\tMap -> Sink: fotballfields Stats(1/1) switched to RUNNING \n03/19/2017 19:29:34\tSource: player selection source(1/1) switched to RUNNING \n03/19/2017 19:29:34\tSource: Linechart metric selection source(1/1) switched to RUNNING \n03/19/2017 19:29:34\tSource: Linechart window selection source(1/1) switched to RUNNING \n03/19/2017 19:29:34\tCo-Flat Map -> (Filter -> Map, Map)(1/1) switched to RUNNING \n03/19/2017 19:29:34\tCo-Flat Map -> Timestamps/Watermarks(1/1) switched to RUNNING \n03/19/2017 19:29:34\tMap(1/1) switched to RUNNING \n03/19/2017 19:29:34\tCo-Flat Map -> (Sink: Linechart, Map)(1/1) switched to RUNNING \n03/19/2017 19:30:30\tJob execution switched to status CANCELLING.\n03/19/2017 19:30:30\tSource: Custom Source -> Map -> Timestamps/Watermarks(1/1) switched to CANCELING \n03/19/2017 19:30:30\tSource: player selection source(1/1) switched to CANCELING \n03/19/2017 19:30:30\tSource: Linechart metric selection source(1/1) switched to CANCELING \n03/19/2017 19:30:30\tSource: Linechart window selection source(1/1) switched to CANCELING \n03/19/2017 19:30:30\tTriggerWindow(TumblingEventTimeWindows(1000), ReducingStateDescriptor{serializer=$line435.$read$$iw$$iw$$iw$$iw$$iw$$iw$$$$$4b64a474beb3955de5f16ae6a24b480$$$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$anon$2$$anon$1@5a243571, reduceFunction=org.apache.flink.streaming.api.functions.aggregation.ComparableAggregator@40daf8dd}, EventTimeTrigger(), WindowedStream.apply(AllWindowedStream.java:326))(1/1) switched to CANCELING \n03/19/2017 19:30:30\tMap -> Sink: Unnamed(1/1) switched to CANCELING \n03/19/2017 19:30:30\tMap(1/1) switched to CANCELING \n03/19/2017 19:30:30\tTriggerWindow(TumblingProcessingTimeWindows(1000), ReducingStateDescriptor{serializer=$line527.$read$$iw$$iw$$iw$$iw$$iw$$iw$$$$$3d6bf99365a7b76395ee948eff82b$$$$$iw$$iw$Metric$$anon$2$$anon$1@d062f92c, reduceFunction=org.apache.flink.streaming.api.functions.aggregation.SumAggregator@47e332d}, ProcessingTimeTrigger(), WindowedStream.apply(AllWindowedStream.java:326))(1/1) switched to CANCELING \n03/19/2017 19:30:30\tMap -> Sink: Raw Stats(1/1) switched to CANCELING \n03/19/2017 19:30:30\tCo-Flat Map -> (Filter -> Map, Map)(1/1) switched to CANCELING \n03/19/2017 19:30:30\tCo-Flat Map -> Timestamps/Watermarks(1/1) switched to CANCELING \n03/19/2017 19:30:30\tTriggerWindow(TumblingEventTimeWindows(60), ReducingStateDescriptor{serializer=$line584.$read$$iw$$iw$$iw$$iw$$iw$$iw$$$$$74db309b2e282854d22549c080809658$$$$iw$$iw$$iw$$iw$$iw$$iw$$anon$2$$anon$1@b447c59d, reduceFunction=org.apache.flink.streaming.api.functions.aggregation.ComparableAggregator@1364054a}, EventTimeTrigger(), WindowedStream.apply(AllWindowedStream.java:326))(1/1) switched to CANCELING \n03/19/2017 19:30:30\tMap(1/1) switched to CANCELING \n03/19/2017 19:30:30\tTriggerWindow(TumblingEventTimeWindows(60), ReducingStateDescriptor{serializer=$line584.$read$$iw$$iw$$iw$$iw$$iw$$iw$$$$$74db309b2e282854d22549c080809658$$$$iw$$iw$$iw$$iw$$iw$$iw$$anon$2$$anon$1@b447c59d, reduceFunction=org.apache.flink.streaming.api.functions.aggregation.ComparableAggregator@4f240a7e}, EventTimeTrigger(), WindowedStream.apply(AllWindowedStream.java:326))(1/1) switched to CANCELING \n03/19/2017 19:30:30\tMap(1/1) switched to CANCELING \n03/19/2017 19:30:30\tTriggerWindow(TumblingEventTimeWindows(60), ReducingStateDescriptor{serializer=$line584.$read$$iw$$iw$$iw$$iw$$iw$$iw$$$$$74db309b2e282854d22549c080809658$$$$iw$$iw$$iw$$iw$$iw$$iw$$anon$2$$anon$1@b447c59d, reduceFunction=org.apache.flink.streaming.api.functions.aggregation.ComparableAggregator@6a784efd}, EventTimeTrigger(), WindowedStream.apply(AllWindowedStream.java:326))(1/1) switched to CANCELING \n03/19/2017 19:30:30\tMap(1/1) switched to CANCELING \n03/19/2017 19:30:30\tTriggerWindow(TumblingEventTimeWindows(60), ReducingStateDescriptor{serializer=$line584.$read$$iw$$iw$$iw$$iw$$iw$$iw$$$$$74db309b2e282854d22549c080809658$$$$iw$$iw$$iw$$iw$$iw$$iw$$anon$2$$anon$1@b447c59d, reduceFunction=org.apache.flink.streaming.api.functions.aggregation.ComparableAggregator@4ae9b766}, EventTimeTrigger(), WindowedStream.apply(AllWindowedStream.java:326))(1/1) switched to CANCELING \n03/19/2017 19:30:30\tMap(1/1) switched to CANCELING \n03/19/2017 19:30:30\tTriggerWindow(TumblingEventTimeWindows(60), FoldingStateDescriptor{serializer=null, initialValue=(-100,-100,-100,-100,-100), foldFunction=org.apache.flink.streaming.api.scala.function.util.ScalaFoldFunction@3fb1a403}, EventTimeTrigger(), WindowedStream.fold(AllWindowedStream.java:223))(1/1) switched to CANCELING \n03/19/2017 19:30:30\tMap(1/1) switched to CANCELING \n03/19/2017 19:30:30\tTriggerWindow(TumblingEventTimeWindows(120), ReducingStateDescriptor{serializer=$line584.$read$$iw$$iw$$iw$$iw$$iw$$iw$$$$$74db309b2e282854d22549c080809658$$$$iw$$iw$$iw$$iw$$iw$$iw$$anon$2$$anon$1@b447c59d, reduceFunction=org.apache.flink.streaming.api.functions.aggregation.ComparableAggregator@42a170ae}, EventTimeTrigger(), WindowedStream.apply(AllWindowedStream.java:326))(1/1) switched to CANCELING \n03/19/2017 19:30:30\tMap(1/1) switched to CANCELING \n03/19/2017 19:30:30\tTriggerWindow(TumblingEventTimeWindows(120), ReducingStateDescriptor{serializer=$line584.$read$$iw$$iw$$iw$$iw$$iw$$iw$$$$$74db309b2e282854d22549c080809658$$$$iw$$iw$$iw$$iw$$iw$$iw$$anon$2$$anon$1@b447c59d, reduceFunction=org.apache.flink.streaming.api.functions.aggregation.ComparableAggregator@7d98c1f}, EventTimeTrigger(), WindowedStream.apply(AllWindowedStream.java:326))(1/1) switched to CANCELING \n03/19/2017 19:30:30\tMap(1/1) switched to CANCELING \n03/19/2017 19:30:30\tTriggerWindow(TumblingEventTimeWindows(120), ReducingStateDescriptor{serializer=$line584.$read$$iw$$iw$$iw$$iw$$iw$$iw$$$$$74db309b2e282854d22549c080809658$$$$iw$$iw$$iw$$iw$$iw$$iw$$anon$2$$anon$1@b447c59d, reduceFunction=org.apache.flink.streaming.api.functions.aggregation.ComparableAggregator@43486e32}, EventTimeTrigger(), WindowedStream.apply(AllWindowedStream.java:326))(1/1) switched to CANCELING \n03/19/2017 19:30:30\tMap(1/1) switched to CANCELING \n03/19/2017 19:30:30\tTriggerWindow(TumblingEventTimeWindows(120), ReducingStateDescriptor{serializer=$line584.$read$$iw$$iw$$iw$$iw$$iw$$iw$$$$$74db309b2e282854d22549c080809658$$$$iw$$iw$$iw$$iw$$iw$$iw$$anon$2$$anon$1@b447c59d, reduceFunction=org.apache.flink.streaming.api.functions.aggregation.ComparableAggregator@781e3a01}, EventTimeTrigger(), WindowedStream.apply(AllWindowedStream.java:326))(1/1) switched to CANCELING \n03/19/2017 19:30:30\tMap(1/1) switched to CANCELING \n03/19/2017 19:30:30\tTriggerWindow(TumblingEventTimeWindows(120), FoldingStateDescriptor{serializer=null, initialValue=(-100,-100,-100,-100,-100), foldFunction=org.apache.flink.streaming.api.scala.function.util.ScalaFoldFunction@4c775e5c}, EventTimeTrigger(), WindowedStream.fold(AllWindowedStream.java:223))(1/1) switched to CANCELING \n03/19/2017 19:30:30\tMap(1/1) switched to CANCELING \n03/19/2017 19:30:30\tTriggerWindow(TumblingEventTimeWindows(600), ReducingStateDescriptor{serializer=$line584.$read$$iw$$iw$$iw$$iw$$iw$$iw$$$$$74db309b2e282854d22549c080809658$$$$iw$$iw$$iw$$iw$$iw$$iw$$anon$2$$anon$1@b447c59d, reduceFunction=org.apache.flink.streaming.api.functions.aggregation.ComparableAggregator@1530911b}, EventTimeTrigger(), WindowedStream.apply(AllWindowedStream.java:326))(1/1) switched to CANCELING \n03/19/2017 19:30:30\tMap(1/1) switched to CANCELING \n03/19/2017 19:30:30\tTriggerWindow(TumblingEventTimeWindows(600), ReducingStateDescriptor{serializer=$line584.$read$$iw$$iw$$iw$$iw$$iw$$iw$$$$$74db309b2e282854d22549c080809658$$$$iw$$iw$$iw$$iw$$iw$$iw$$anon$2$$anon$1@b447c59d, reduceFunction=org.apache.flink.streaming.api.functions.aggregation.ComparableAggregator@45709065}, EventTimeTrigger(), WindowedStream.apply(AllWindowedStream.java:326))(1/1) switched to CANCELING \n03/19/2017 19:30:30\tMap(1/1) switched to CANCELING \n03/19/2017 19:30:30\tTriggerWindow(TumblingEventTimeWindows(600), ReducingStateDescriptor{serializer=$line584.$read$$iw$$iw$$iw$$iw$$iw$$iw$$$$$74db309b2e282854d22549c080809658$$$$iw$$iw$$iw$$iw$$iw$$iw$$anon$2$$anon$1@b447c59d, reduceFunction=org.apache.flink.streaming.api.functions.aggregation.ComparableAggregator@71e9287a}, EventTimeTrigger(), WindowedStream.apply(AllWindowedStream.java:326))(1/1) switched to CANCELING \n03/19/2017 19:30:30\tMap(1/1) switched to CANCELING \n03/19/2017 19:30:30\tTriggerWindow(TumblingEventTimeWindows(600), ReducingStateDescriptor{serializer=$line584.$read$$iw$$iw$$iw$$iw$$iw$$iw$$$$$74db309b2e282854d22549c080809658$$$$iw$$iw$$iw$$iw$$iw$$iw$$anon$2$$anon$1@b447c59d, reduceFunction=org.apache.flink.streaming.api.functions.aggregation.ComparableAggregator@74dae48b}, EventTimeTrigger(), WindowedStream.apply(AllWindowedStream.java:326))(1/1) switched to CANCELING \n03/19/2017 19:30:31\tMap(1/1) switched to CANCELING \n03/19/2017 19:30:31\tTriggerWindow(TumblingEventTimeWindows(600), FoldingStateDescriptor{serializer=null, initialValue=(-100,-100,-100,-100,-100), foldFunction=org.apache.flink.streaming.api.scala.function.util.ScalaFoldFunction@2e0fcd65}, EventTimeTrigger(), WindowedStream.fold(AllWindowedStream.java:223))(1/1) switched to CANCELING \n03/19/2017 19:30:31\tMap(1/1) switched to CANCELING \n03/19/2017 19:30:31\tCo-Flat Map -> (Sink: Linechart, Map)(1/1) switched to CANCELING \n03/19/2017 19:30:31\tTriggerWindow(TumblingProcessingTimeWindows(1000), ReducingStateDescriptor{serializer=$line527.$read$$iw$$iw$$iw$$iw$$iw$$iw$$$$$3d6bf99365a7b76395ee948eff82b$$$$$iw$$iw$Metric$$anon$2$$anon$1@d062f92c, reduceFunction=org.apache.flink.streaming.api.functions.aggregation.SumAggregator@22a2e0d9}, ProcessingTimeTrigger(), WindowedStream.apply(AllWindowedStream.java:326))(1/1) switched to CANCELING \n03/19/2017 19:30:31\tMap -> Sink: linechart Stats(1/1) switched to CANCELING \n03/19/2017 19:30:31\tFast TumblingProcessingTimeWindows(100) of WindowedStream.aggregate(WindowedStream.scala:428) -> Map(1/1) switched to CANCELING \n03/19/2017 19:30:31\tTriggerWindow(TumblingProcessingTimeWindows(100), FoldingStateDescriptor{serializer=null, initialValue=List(), foldFunction=org.apache.flink.streaming.api.scala.function.util.ScalaFoldFunction@4875ea92}, ProcessingTimeTrigger(), WindowedStream.fold(AllWindowedStream.java:223))(1/1) switched to CANCELING \n03/19/2017 19:30:31\tSink: Fotballfield(1/1) switched to CANCELING \n03/19/2017 19:30:31\tMap(1/1) switched to CANCELING \n03/19/2017 19:30:31\tTriggerWindow(TumblingProcessingTimeWindows(1000), ReducingStateDescriptor{serializer=$line527.$read$$iw$$iw$$iw$$iw$$iw$$iw$$$$$3d6bf99365a7b76395ee948eff82b$$$$$iw$$iw$Metric$$anon$2$$anon$1@d062f92c, reduceFunction=org.apache.flink.streaming.api.functions.aggregation.SumAggregator@3bbbff31}, ProcessingTimeTrigger(), WindowedStream.apply(AllWindowedStream.java:326))(1/1) switched to CANCELING \n03/19/2017 19:30:31\tMap -> Sink: fotballfields Stats(1/1) switched to CANCELING \n03/19/2017 19:30:31\tSource: Custom Source -> Map -> Timestamps/Watermarks(1/1) switched to CANCELED \n03/19/2017 19:30:31\tMap -> Sink: Unnamed(1/1) switched to CANCELED \n03/19/2017 19:30:31\tCo-Flat Map -> (Filter -> Map, Map)(1/1) switched to CANCELED \n03/19/2017 19:30:31\tTriggerWindow(TumblingEventTimeWindows(60), ReducingStateDescriptor{serializer=$line584.$read$$iw$$iw$$iw$$iw$$iw$$iw$$$$$74db309b2e282854d22549c080809658$$$$iw$$iw$$iw$$iw$$iw$$iw$$anon$2$$anon$1@b447c59d, reduceFunction=org.apache.flink.streaming.api.functions.aggregation.ComparableAggregator@4f240a7e}, EventTimeTrigger(), WindowedStream.apply(AllWindowedStream.java:326))(1/1) switched to CANCELED \n03/19/2017 19:30:31\tTriggerWindow(TumblingEventTimeWindows(1000), ReducingStateDescriptor{serializer=$line435.$read$$iw$$iw$$iw$$iw$$iw$$iw$$$$$4b64a474beb3955de5f16ae6a24b480$$$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$anon$2$$anon$1@5a243571, reduceFunction=org.apache.flink.streaming.api.functions.aggregation.ComparableAggregator@40daf8dd}, EventTimeTrigger(), WindowedStream.apply(AllWindowedStream.java:326))(1/1) switched to CANCELED \n03/19/2017 19:30:31\tMap(1/1) switched to CANCELED \n03/19/2017 19:30:31\tMap -> Sink: Raw Stats(1/1) switched to CANCELED \n03/19/2017 19:30:31\tSource: Linechart window selection source(1/1) switched to CANCELED \n03/19/2017 19:30:31\tTriggerWindow(TumblingEventTimeWindows(60), ReducingStateDescriptor{serializer=$line584.$read$$iw$$iw$$iw$$iw$$iw$$iw$$$$$74db309b2e282854d22549c080809658$$$$iw$$iw$$iw$$iw$$iw$$iw$$anon$2$$anon$1@b447c59d, reduceFunction=org.apache.flink.streaming.api.functions.aggregation.ComparableAggregator@4ae9b766}, EventTimeTrigger(), WindowedStream.apply(AllWindowedStream.java:326))(1/1) switched to CANCELED \n03/19/2017 19:30:31\tMap(1/1) switched to CANCELED \n03/19/2017 19:30:31\tTriggerWindow(TumblingEventTimeWindows(60), ReducingStateDescriptor{serializer=$line584.$read$$iw$$iw$$iw$$iw$$iw$$iw$$$$$74db309b2e282854d22549c080809658$$$$iw$$iw$$iw$$iw$$iw$$iw$$anon$2$$anon$1@b447c59d, reduceFunction=org.apache.flink.streaming.api.functions.aggregation.ComparableAggregator@6a784efd}, EventTimeTrigger(), WindowedStream.apply(AllWindowedStream.java:326))(1/1) switched to CANCELED \n03/19/2017 19:30:31\tMap(1/1) switched to CANCELED \n03/19/2017 19:30:31\tMap(1/1) switched to CANCELED \n03/19/2017 19:30:31\tSource: Linechart metric selection source(1/1) switched to CANCELED \n03/19/2017 19:30:31\tCo-Flat Map -> Timestamps/Watermarks(1/1) switched to CANCELED \n03/19/2017 19:30:31\tTriggerWindow(TumblingProcessingTimeWindows(1000), ReducingStateDescriptor{serializer=$line527.$read$$iw$$iw$$iw$$iw$$iw$$iw$$$$$3d6bf99365a7b76395ee948eff82b$$$$$iw$$iw$Metric$$anon$2$$anon$1@d062f92c, reduceFunction=org.apache.flink.streaming.api.functions.aggregation.SumAggregator@47e332d}, ProcessingTimeTrigger(), WindowedStream.apply(AllWindowedStream.java:326))(1/1) switched to CANCELED \n03/19/2017 19:30:31\tMap(1/1) switched to CANCELED \n03/19/2017 19:30:31\tTriggerWindow(TumblingEventTimeWindows(60), FoldingStateDescriptor{serializer=null, initialValue=(-100,-100,-100,-100,-100), foldFunction=org.apache.flink.streaming.api.scala.function.util.ScalaFoldFunction@3fb1a403}, EventTimeTrigger(), WindowedStream.fold(AllWindowedStream.java:223))(1/1) switched to CANCELED \n03/19/2017 19:30:31\tMap(1/1) switched to CANCELED \n03/19/2017 19:30:31\tTriggerWindow(TumblingEventTimeWindows(120), ReducingStateDescriptor{serializer=$line584.$read$$iw$$iw$$iw$$iw$$iw$$iw$$$$$74db309b2e282854d22549c080809658$$$$iw$$iw$$iw$$iw$$iw$$iw$$anon$2$$anon$1@b447c59d, reduceFunction=org.apache.flink.streaming.api.functions.aggregation.ComparableAggregator@42a170ae}, EventTimeTrigger(), WindowedStream.apply(AllWindowedStream.java:326))(1/1) switched to CANCELED \n03/19/2017 19:30:31\tSource: player selection source(1/1) switched to CANCELED \n03/19/2017 19:30:31\tTriggerWindow(TumblingEventTimeWindows(600), FoldingStateDescriptor{serializer=null, initialValue=(-100,-100,-100,-100,-100), foldFunction=org.apache.flink.streaming.api.scala.function.util.ScalaFoldFunction@2e0fcd65}, EventTimeTrigger(), WindowedStream.fold(AllWindowedStream.java:223))(1/1) switched to CANCELED \n03/19/2017 19:30:31\tMap(1/1) switched to CANCELED \n03/19/2017 19:30:31\tMap(1/1) switched to CANCELED \n03/19/2017 19:30:31\tTriggerWindow(TumblingEventTimeWindows(120), ReducingStateDescriptor{serializer=$line584.$read$$iw$$iw$$iw$$iw$$iw$$iw$$$$$74db309b2e282854d22549c080809658$$$$iw$$iw$$iw$$iw$$iw$$iw$$anon$2$$anon$1@b447c59d, reduceFunction=org.apache.flink.streaming.api.functions.aggregation.ComparableAggregator@7d98c1f}, EventTimeTrigger(), WindowedStream.apply(AllWindowedStream.java:326))(1/1) switched to CANCELED \n03/19/2017 19:30:31\tTriggerWindow(TumblingEventTimeWindows(120), ReducingStateDescriptor{serializer=$line584.$read$$iw$$iw$$iw$$iw$$iw$$iw$$$$$74db309b2e282854d22549c080809658$$$$iw$$iw$$iw$$iw$$iw$$iw$$anon$2$$anon$1@b447c59d, reduceFunction=org.apache.flink.streaming.api.functions.aggregation.ComparableAggregator@43486e32}, EventTimeTrigger(), WindowedStream.apply(AllWindowedStream.java:326))(1/1) switched to CANCELED \n03/19/2017 19:30:31\tTriggerWindow(TumblingEventTimeWindows(60), ReducingStateDescriptor{serializer=$line584.$read$$iw$$iw$$iw$$iw$$iw$$iw$$$$$74db309b2e282854d22549c080809658$$$$iw$$iw$$iw$$iw$$iw$$iw$$anon$2$$anon$1@b447c59d, reduceFunction=org.apache.flink.streaming.api.functions.aggregation.ComparableAggregator@1364054a}, EventTimeTrigger(), WindowedStream.apply(AllWindowedStream.java:326))(1/1) switched to CANCELED \n03/19/2017 19:30:31\tTriggerWindow(TumblingEventTimeWindows(600), ReducingStateDescriptor{serializer=$line584.$read$$iw$$iw$$iw$$iw$$iw$$iw$$$$$74db309b2e282854d22549c080809658$$$$iw$$iw$$iw$$iw$$iw$$iw$$anon$2$$anon$1@b447c59d, reduceFunction=org.apache.flink.streaming.api.functions.aggregation.ComparableAggregator@71e9287a}, EventTimeTrigger(), WindowedStream.apply(AllWindowedStream.java:326))(1/1) switched to CANCELED \n03/19/2017 19:30:31\tMap(1/1) switched to CANCELED \n03/19/2017 19:30:31\tTriggerWindow(TumblingEventTimeWindows(120), ReducingStateDescriptor{serializer=$line584.$read$$iw$$iw$$iw$$iw$$iw$$iw$$$$$74db309b2e282854d22549c080809658$$$$iw$$iw$$iw$$iw$$iw$$iw$$anon$2$$anon$1@b447c59d, reduceFunction=org.apache.flink.streaming.api.functions.aggregation.ComparableAggregator@781e3a01}, EventTimeTrigger(), WindowedStream.apply(AllWindowedStream.java:326))(1/1) switched to CANCELED \n03/19/2017 19:30:31\tMap(1/1) switched to CANCELED \n03/19/2017 19:30:31\tCo-Flat Map -> (Sink: Linechart, Map)(1/1) switched to CANCELED \n03/19/2017 19:30:31\tTriggerWindow(TumblingEventTimeWindows(600), ReducingStateDescriptor{serializer=$line584.$read$$iw$$iw$$iw$$iw$$iw$$iw$$$$$74db309b2e282854d22549c080809658$$$$iw$$iw$$iw$$iw$$iw$$iw$$anon$2$$anon$1@b447c59d, reduceFunction=org.apache.flink.streaming.api.functions.aggregation.ComparableAggregator@45709065}, EventTimeTrigger(), WindowedStream.apply(AllWindowedStream.java:326))(1/1) switched to CANCELED \n03/19/2017 19:30:31\tMap(1/1) switched to CANCELED \n03/19/2017 19:30:31\tTriggerWindow(TumblingEventTimeWindows(600), ReducingStateDescriptor{serializer=$line584.$read$$iw$$iw$$iw$$iw$$iw$$iw$$$$$74db309b2e282854d22549c080809658$$$$iw$$iw$$iw$$iw$$iw$$iw$$anon$2$$anon$1@b447c59d, reduceFunction=org.apache.flink.streaming.api.functions.aggregation.ComparableAggregator@1530911b}, EventTimeTrigger(), WindowedStream.apply(AllWindowedStream.java:326))(1/1) switched to CANCELED \n03/19/2017 19:30:31\tMap(1/1) switched to CANCELED \n03/19/2017 19:30:31\tTriggerWindow(TumblingEventTimeWindows(120), FoldingStateDescriptor{serializer=null, initialValue=(-100,-100,-100,-100,-100), foldFunction=org.apache.flink.streaming.api.scala.function.util.ScalaFoldFunction@4c775e5c}, EventTimeTrigger(), WindowedStream.fold(AllWindowedStream.java:223))(1/1) switched to CANCELED \n03/19/2017 19:30:31\tTriggerWindow(TumblingEventTimeWindows(600), ReducingStateDescriptor{serializer=$line584.$read$$iw$$iw$$iw$$iw$$iw$$iw$$$$$74db309b2e282854d22549c080809658$$$$iw$$iw$$iw$$iw$$iw$$iw$$anon$2$$anon$1@b447c59d, reduceFunction=org.apache.flink.streaming.api.functions.aggregation.ComparableAggregator@74dae48b}, EventTimeTrigger(), WindowedStream.apply(AllWindowedStream.java:326))(1/1) switched to CANCELED \n03/19/2017 19:30:31\tMap(1/1) switched to CANCELED \n03/19/2017 19:30:31\tMap(1/1) switched to CANCELED \n03/19/2017 19:30:31\tMap(1/1) switched to CANCELED \n03/19/2017 19:30:31\tSink: Fotballfield(1/1) switched to CANCELED \n03/19/2017 19:30:31\tMap(1/1) switched to CANCELED \n03/19/2017 19:30:31\tTriggerWindow(TumblingProcessingTimeWindows(1000), ReducingStateDescriptor{serializer=$line527.$read$$iw$$iw$$iw$$iw$$iw$$iw$$$$$3d6bf99365a7b76395ee948eff82b$$$$$iw$$iw$Metric$$anon$2$$anon$1@d062f92c, reduceFunction=org.apache.flink.streaming.api.functions.aggregation.SumAggregator@22a2e0d9}, ProcessingTimeTrigger(), WindowedStream.apply(AllWindowedStream.java:326))(1/1) switched to CANCELED \n03/19/2017 19:30:31\tFast TumblingProcessingTimeWindows(100) of WindowedStream.aggregate(WindowedStream.scala:428) -> Map(1/1) switched to CANCELED \n03/19/2017 19:30:31\tMap -> Sink: linechart Stats(1/1) switched to CANCELED \n03/19/2017 19:30:31\tTriggerWindow(TumblingProcessingTimeWindows(100), FoldingStateDescriptor{serializer=null, initialValue=List(), foldFunction=org.apache.flink.streaming.api.scala.function.util.ScalaFoldFunction@4875ea92}, ProcessingTimeTrigger(), WindowedStream.fold(AllWindowedStream.java:223))(1/1) switched to CANCELED \n03/19/2017 19:30:31\tMap(1/1) switched to CANCELED \n03/19/2017 19:30:31\tTriggerWindow(TumblingProcessingTimeWindows(1000), ReducingStateDescriptor{serializer=$line527.$read$$iw$$iw$$iw$$iw$$iw$$iw$$$$$3d6bf99365a7b76395ee948eff82b$$$$$iw$$iw$Metric$$anon$2$$anon$1@d062f92c, reduceFunction=org.apache.flink.streaming.api.functions.aggregation.SumAggregator@3bbbff31}, ProcessingTimeTrigger(), WindowedStream.apply(AllWindowedStream.java:326))(1/1) switched to CANCELED \n03/19/2017 19:30:31\tMap -> Sink: fotballfields Stats(1/1) switched to CANCELED \n03/19/2017 19:30:31\tJob execution switched to status CANCELED.\norg.apache.flink.client.program.ProgramInvocationException: The program execution failed: Job was cancelled.\n\tat org.apache.flink.client.program.ClusterClient.run(ClusterClient.java:413)\n\tat org.apache.flink.client.program.StandaloneClusterClient.submitJob(StandaloneClusterClient.java:92)\n\tat org.apache.flink.client.program.ClusterClient.run(ClusterClient.java:389)\n\tat org.apache.flink.client.program.ClusterClient.run(ClusterClient.java:381)\n\tat org.apache.flink.streaming.api.environment.RemoteStreamEnvironment.executeRemotely(RemoteStreamEnvironment.java:209)\n\tat org.apache.flink.api.java.ScalaShellRemoteStreamEnvironment.executeRemotely(ScalaShellRemoteStreamEnvironment.java:87)\n\tat org.apache.flink.streaming.api.environment.RemoteStreamEnvironment.execute(RemoteStreamEnvironment.java:173)\n\tat org.apache.flink.streaming.api.scala.StreamExecutionEnvironment.execute(StreamExecutionEnvironment.scala:585)\n\tat $$$$1aa01b2e3d2716b4c49793f32c6d7be$$$.<init>(<console>:167)\n\tat $$$$1aa01b2e3d2716b4c49793f32c6d7be$$$.<clinit>(<console>)\n\tat .<init>(<console>:7)\n\tat .<clinit>(<console>)\n\tat $print(<console>)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat scala.tools.nsc.interpreter.IMain$ReadEvalPrint.call(IMain.scala:734)\n\tat scala.tools.nsc.interpreter.IMain$Request.loadAndRun(IMain.scala:983)\n\tat scala.tools.nsc.interpreter.IMain.loadAndRunReq$1(IMain.scala:573)\n\tat scala.tools.nsc.interpreter.IMain.interpret(IMain.scala:604)\n\tat scala.tools.nsc.interpreter.IMain.interpret(IMain.scala:568)\n\tat org.apache.zeppelin.flink.FlinkInterpreter$1.apply(FlinkInterpreter.java:305)\n\tat org.apache.zeppelin.flink.FlinkInterpreter$1.apply(FlinkInterpreter.java:301)\n\tat scala.util.DynamicVariable.withValue(DynamicVariable.scala:57)\n\tat scala.Console$.withOut(Console.scala:107)\n\tat scala.Console.withOut(Console.scala)\n\tat org.apache.zeppelin.flink.FlinkInterpreter.interpret(FlinkInterpreter.java:299)\n\tat org.apache.zeppelin.flink.FlinkInterpreter.interpret(FlinkInterpreter.java:244)\n\tat org.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:94)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:341)\n\tat org.apache.zeppelin.scheduler.Job.run(Job.java:176)\n\tat org.apache.zeppelin.scheduler.FIFOScheduler$1.run(FIFOScheduler.java:139)\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\tat java.lang.Thread.run(Thread.java:745)\nCaused by: org.apache.flink.runtime.client.JobCancellationException: Job was cancelled.\n\tat org.apache.flink.runtime.jobmanager.JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$8.apply$mcV$sp(JobManager.scala:814)\n\tat org.apache.flink.runtime.jobmanager.JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$8.apply(JobManager.scala:768)\n\tat org.apache.flink.runtime.jobmanager.JobManager$$anonfun$handleMessage$1$$anonfun$applyOrElse$8.apply(JobManager.scala:768)\n\tat scala.concurrent.impl.Future$PromiseCompletingRunnable.liftedTree1$1(Future.scala:24)\n\tat scala.concurrent.impl.Future$PromiseCompletingRunnable.run(Future.scala:24)\n\tat akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:41)\n\tat akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:401)\n\tat scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260)\n\tat scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.pollAndExecAll(ForkJoinPool.java:1253)\n\tat scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1346)\n\tat scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979)\n\tat scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107)\n\n"
      },
      "dateCreated":"2017-03-11T12:04:28+0000",
      "dateStarted":"2017-03-19T19:29:21+0000",
      "dateFinished":"2017-03-19T19:30:31+0000",
      "status":"ERROR",
      "progressUpdateIntervalMs":500,
      "$$hashKey":"object:312"
    },
    {  
      "text":"%flink ",
      "dateUpdated":"2017-03-19T19:26:54+0000",
      "config":{  
        "colWidth":12,
        "graph":{  
          "mode":"table",
          "height":300,
          "optionOpen":false,
          "keys":[  

          ],
          "values":[  

          ],
          "groups":[  

          ],
          "scatter":{  

          }
        },
        "enabled":true,
        "editorMode":"ace/mode/scala"
      },
      "settings":{  
        "params":{  

        },
        "forms":{  

        }
      },
      "jobName":"paragraph_1489233868647_-2044345747",
      "id":"20170103-130644_1769631643",
      "result":{  
        "code":"SUCCESS",
        "type":"TEXT",
        "msg":""
      },
      "dateCreated":"2017-03-11T12:04:28+0000",
      "dateStarted":"2017-03-19T19:27:53+0000",
      "dateFinished":"2017-03-19T19:29:02+0000",
      "status":"FINISHED",
      "progressUpdateIntervalMs":500,
      "$$hashKey":"object:313"
    },
    {  
      "text":"%flink ",
      "dateUpdated":"2017-03-19T19:26:54+0000",
      "config":{  
        "colWidth":12,
        "graph":{  
          "mode":"table",
          "height":300,
          "optionOpen":false,
          "keys":[  

          ],
          "values":[  

          ],
          "groups":[  

          ],
          "scatter":{  

          }
        },
        "enabled":true,
        "editorMode":"ace/mode/scala"
      },
      "settings":{  
        "params":{  

        },
        "forms":{  

        }
      },
      "jobName":"paragraph_1489412136413_975203869",
      "id":"20170313-133536_2134115092",
      "result":{  
        "code":"SUCCESS",
        "type":"TEXT",
        "msg":""
      },
      "dateCreated":"2017-03-13T13:35:36+0000",
      "dateStarted":"2017-03-19T19:29:02+0000",
      "dateFinished":"2017-03-19T19:29:02+0000",
      "status":"FINISHED",
      "progressUpdateIntervalMs":500,
      "$$hashKey":"object:314"
    },
    {  
      "text":"%flink ",
      "dateUpdated":"2017-03-19T19:26:54+0000",
      "config":{  
        "colWidth":12,
        "graph":{  
          "mode":"table",
          "height":300,
          "optionOpen":false,
          "keys":[  

          ],
          "values":[  

          ],
          "groups":[  

          ],
          "scatter":{  

          }
        },
        "enabled":true,
        "editorMode":"ace/mode/scala"
      },
      "settings":{  
        "params":{  

        },
        "forms":{  

        }
      },
      "jobName":"paragraph_1489412835811_412696044",
      "id":"20170313-134715_2004728721",
      "result":{  
        "code":"SUCCESS",
        "type":"TEXT",
        "msg":""
      },
      "dateCreated":"2017-03-13T13:47:15+0000",
      "dateStarted":"2017-03-19T19:29:03+0000",
      "dateFinished":"2017-03-19T19:29:03+0000",
      "status":"FINISHED",
      "progressUpdateIntervalMs":500,
      "$$hashKey":"object:315"
    },
    {  
      "text":"%flink ",
      "dateUpdated":"2017-03-19T19:26:55+0000",
      "config":{  
        "colWidth":12,
        "graph":{  
          "mode":"table",
          "height":300,
          "optionOpen":false,
          "keys":[  

          ],
          "values":[  

          ],
          "groups":[  

          ],
          "scatter":{  

          }
        },
        "enabled":true,
        "editorMode":"ace/mode/scala"
      },
      "settings":{  
        "params":{  

        },
        "forms":{  

        }
      },
      "jobName":"paragraph_1489744313954_-42566809",
      "id":"20170317-095153_1871833787",
      "result":{  
        "code":"SUCCESS",
        "type":"TEXT",
        "msg":""
      },
      "dateCreated":"2017-03-17T09:51:53+0000",
      "dateStarted":"2017-03-19T19:29:03+0000",
      "dateFinished":"2017-03-19T19:29:03+0000",
      "status":"FINISHED",
      "progressUpdateIntervalMs":500,
      "$$hashKey":"object:316"
    },
    {  
      "text":"%flink ",
      "dateUpdated":"2017-03-19T19:26:55+0000",
      "config":{  
        "colWidth":12,
        "graph":{  
          "mode":"table",
          "height":300,
          "optionOpen":false,
          "keys":[  

          ],
          "values":[  

          ],
          "groups":[  

          ],
          "scatter":{  

          }
        },
        "enabled":true,
        "editorMode":"ace/mode/scala"
      },
      "settings":{  
        "params":{  

        },
        "forms":{  

        }
      },
      "jobName":"paragraph_1489754888710_-1803190776",
      "id":"20170317-124808_979090340",
      "result":{  
        "code":"SUCCESS",
        "type":"TEXT",
        "msg":""
      },
      "dateCreated":"2017-03-17T12:48:08+0000",
      "dateStarted":"2017-03-19T19:29:03+0000",
      "dateFinished":"2017-03-19T19:29:03+0000",
      "status":"FINISHED",
      "progressUpdateIntervalMs":500,
      "$$hashKey":"object:317"
    },
    {  
      "text":"%flink ",
      "dateUpdated":"2017-03-19T19:26:56+0000",
      "config":{  
        "colWidth":12,
        "graph":{  
          "mode":"table",
          "height":300,
          "optionOpen":false,
          "keys":[  

          ],
          "values":[  

          ],
          "groups":[  

          ],
          "scatter":{  

          }
        },
        "enabled":true,
        "editorMode":"ace/mode/scala"
      },
      "settings":{  
        "params":{  

        },
        "forms":{  

        }
      },
      "jobName":"paragraph_1489756143213_1967724971",
      "id":"20170317-130903_726067545",
      "result":{  
        "code":"SUCCESS",
        "type":"TEXT",
        "msg":""
      },
      "dateCreated":"2017-03-17T13:09:03+0000",
      "dateStarted":"2017-03-19T19:29:03+0000",
      "dateFinished":"2017-03-19T19:29:03+0000",
      "status":"FINISHED",
      "progressUpdateIntervalMs":500,
      "$$hashKey":"object:318"
    },
    {  
      "text":"%flink ",
      "dateUpdated":"2017-03-19T19:26:56+0000",
      "config":{  
        "colWidth":12,
        "graph":{  
          "mode":"table",
          "height":300,
          "optionOpen":false,
          "keys":[  

          ],
          "values":[  

          ],
          "groups":[  

          ],
          "scatter":{  

          }
        },
        "enabled":true,
        "editorMode":"ace/mode/scala"
      },
      "settings":{  
        "params":{  

        },
        "forms":{  

        }
      },
      "jobName":"paragraph_1489757174825_-383792432",
      "id":"20170317-132614_261255649",
      "result":{  
        "code":"SUCCESS",
        "type":"TEXT",
        "msg":""
      },
      "dateCreated":"2017-03-17T13:26:14+0000",
      "dateStarted":"2017-03-19T19:29:03+0000",
      "dateFinished":"2017-03-19T19:29:03+0000",
      "status":"FINISHED",
      "progressUpdateIntervalMs":500,
      "$$hashKey":"object:319"
    },
    {  
      "text":"%flink ",
      "dateUpdated":"2017-03-19T19:26:57+0000",
      "config":{  
        "colWidth":12,
        "graph":{  
          "mode":"table",
          "height":300,
          "optionOpen":false,
          "keys":[  

          ],
          "values":[  

          ],
          "groups":[  

          ],
          "scatter":{  

          }
        },
        "enabled":true,
        "editorMode":"ace/mode/scala"
      },
      "settings":{  
        "params":{  

        },
        "forms":{  

        }
      },
      "jobName":"paragraph_1489951084031_950055407",
      "id":"20170319-191804_104452659",
      "result":{  
        "code":"SUCCESS",
        "type":"TEXT",
        "msg":""
      },
      "dateCreated":"2017-03-19T19:18:04+0000",
      "dateStarted":"2017-03-19T19:29:03+0000",
      "dateFinished":"2017-03-19T19:29:03+0000",
      "status":"FINISHED",
      "progressUpdateIntervalMs":500,
      "$$hashKey":"object:320"
    },
    {  
      "text":"%flink ",
      "dateUpdated":"2017-03-19T19:26:57+0000",
      "config":{  
        "colWidth":12,
        "graph":{  
          "mode":"table",
          "height":300,
          "optionOpen":false,
          "keys":[  

          ],
          "values":[  

          ],
          "groups":[  

          ],
          "scatter":{  

          }
        },
        "enabled":true,
        "editorMode":"ace/mode/scala"
      },
      "settings":{  
        "params":{  

        },
        "forms":{  

        }
      },
      "jobName":"paragraph_1489951617186_-950653421",
      "id":"20170319-192657_1535632279",
      "dateCreated":"2017-03-19T19:26:57+0000",
      "status":"READY",
      "progressUpdateIntervalMs":500,
      "$$hashKey":"object:321"
    }
  ],
  "name":"I²: Football Dashboard",
  "id":"2CBK1CKF2",
  "lastReplName":{  
    "value":"flink"
  },
  "angularObjects":{  
    "2CCZ7V9RC:shared_process":[  

    ],
    "2CBMSAB18:shared_process":[  
      {  
        "name":"point2",
        "object":[  
          {  
            "_1":47,
            "_2":30603,
            "_3":2947,
            "_4":false
          },
          {  
            "_1":23,
            "_2":17192,
            "_3":1801,
            "_4":false
          },
          {  
            "_1":105,
            "_2":28051,
            "_3":6167,
            "_4":false
          },
          {  
            "_1":4,
            "_2":11161,
            "_3":21445,
            "_4":false
          },
          {  
            "_1":65,
            "_2":28343,
            "_3":21701,
            "_4":false
          },
          {  
            "_1":68,
            "_2":14181,
            "_3":9409,
            "_4":false
          },
          {  
            "_1":75,
            "_2":20883,
            "_3":739,
            "_4":true
          },
          {  
            "_1":99,
            "_2":22687,
            "_3":28186,
            "_4":false
          },
          {  
            "_1":8,
            "_2":-7242,
            "_3":-10139,
            "_4":false
          },
          {  
            "_1":97,
            "_2":20885,
            "_3":-17538,
            "_4":false
          },
          {  
            "_1":88,
            "_2":22138,
            "_3":-3929,
            "_4":false
          },
          {  
            "_1":64,
            "_2":42218,
            "_3":9016,
            "_4":false
          },
          {  
            "_1":14,
            "_2":21220,
            "_3":-17920,
            "_4":false
          },
          {  
            "_1":10,
            "_2":-5399,
            "_3":16426,
            "_4":false
          },
          {  
            "_1":66,
            "_2":27739,
            "_3":21743,
            "_4":false
          },
          {  
            "_1":74,
            "_2":10216,
            "_3":-2337,
            "_4":false
          },
          {  
            "_1":53,
            "_2":7258,
            "_3":1558,
            "_4":false
          },
          {  
            "_1":57,
            "_2":8139,
            "_3":10931,
            "_4":false
          },
          {  
            "_1":100,
            "_2":22319,
            "_3":28146,
            "_4":false
          },
          {  
            "_1":54,
            "_2":7166,
            "_3":1334,
            "_4":false
          },
          {  
            "_1":38,
            "_2":2306,
            "_3":9444,
            "_4":false
          },
          {  
            "_1":67,
            "_2":13688,
            "_3":9152,
            "_4":false
          },
          {  
            "_1":16,
            "_2":30832,
            "_3":3102,
            "_4":false
          },
          {  
            "_1":61,
            "_2":22755,
            "_3":27894,
            "_4":false
          },
          {  
            "_1":49,
            "_2":22535,
            "_3":-3635,
            "_4":false
          },
          {  
            "_1":69,
            "_2":2252,
            "_3":9992,
            "_4":false
          },
          {  
            "_1":58,
            "_2":8599,
            "_3":10237,
            "_4":false
          },
          {  
            "_1":73,
            "_2":10552,
            "_3":-2082,
            "_4":false
          },
          {  
            "_1":62,
            "_2":22233,
            "_3":27872,
            "_4":false
          },
          {  
            "_1":40,
            "_2":11309,
            "_3":21505,
            "_4":false
          },
          {  
            "_1":44,
            "_2":20547,
            "_3":540,
            "_4":false
          },
          {  
            "_1":13,
            "_2":20998,
            "_3":-17642,
            "_4":false
          },
          {  
            "_1":28,
            "_2":22524,
            "_3":13441,
            "_4":false
          },
          {  
            "_1":24,
            "_2":17023,
            "_3":1603,
            "_4":false
          },
          {  
            "_1":52,
            "_2":11634,
            "_3":-2627,
            "_4":false
          },
          {  
            "_1":71,
            "_2":11629,
            "_3":21488,
            "_4":false
          },
          {  
            "_1":59,
            "_2":22122,
            "_3":13271,
            "_4":false
          },
          {  
            "_1":19,
            "_2":11419,
            "_3":-3011,
            "_4":false
          }
        ],
        "noteId":"2CBK1CKF2",
        "paragraphId":"20160810-190726_872539191"
      },
      {  
        "name":"select",
        "object":"velocity",
        "noteId":"2CBK1CKF2",
        "paragraphId":"20160822-105407_1058249252"
      },
      {  
        "name":"options",
        "object":[  
          "velocity",
          "acceleration"
        ],
        "noteId":"2CBK1CKF2",
        "paragraphId":"20160822-105407_1058249252"
      },
      {  
        "name":"label",
        "object":"select metric",
        "noteId":"2CBK1CKF2",
        "paragraphId":"20160822-105407_1058249252"
      },
      {  
        "name":"selectedSensor",
        "object":13,
        "noteId":"2CBK1CKF2",
        "paragraphId":"20160825-193827_436061119"
      },
      {  
        "name":"manual",
        "object":true,
        "noteId":"2CBK1CKF2",
        "paragraphId":"20160825-193827_436061119"
      },
      {  
        "name":"selectedSensorLocal",
        "object":75,
        "noteId":"2CBK1CKF2",
        "paragraphId":"20160825-193827_436061119"
      },
      {  
        "name":"content",
        "object":"Timestamp: 0min : 50s",
        "noteId":"2CBK1CKF2",
        "paragraphId":"20160825-212323_2098054786"
      },
      {  
        "name":"content",
        "object":"9 items/s",
        "noteId":"2CBK1CKF2",
        "paragraphId":"20161010-091419_1436431982"
      },
      {  
        "name":"select",
        "object":"1min",
        "noteId":"2CBK1CKF2",
        "paragraphId":"20160824-160916_1475446458"
      },
      {  
        "name":"options",
        "object":[  
          "30s",
          "1min",
          "5min"
        ],
        "noteId":"2CBK1CKF2",
        "paragraphId":"20160824-160916_1475446458"
      },
      {  
        "name":"label",
        "object":"select windowning",
        "noteId":"2CBK1CKF2",
        "paragraphId":"20160824-160916_1475446458"
      },
      {  
        "name":"point2",
        "object":[  
          {  
            "_1":47,
            "_2":34077,
            "_3":5794,
            "_4":false
          },
          {  
            "_1":23,
            "_2":20041,
            "_3":6437,
            "_4":false
          },
          {  
            "_1":4,
            "_2":2157,
            "_3":33653,
            "_4":false
          },
          {  
            "_1":65,
            "_2":21494,
            "_3":25202,
            "_4":false
          },
          {  
            "_1":68,
            "_2":18508,
            "_3":15500,
            "_4":false
          },
          {  
            "_1":75,
            "_2":17319,
            "_3":13668,
            "_4":false
          },
          {  
            "_1":99,
            "_2":22517,
            "_3":32989,
            "_4":false
          },
          {  
            "_1":8,
            "_2":-7255,
            "_3":-10109,
            "_4":false
          },
          {  
            "_1":97,
            "_2":23500,
            "_3":-21331,
            "_4":false
          },
          {  
            "_1":88,
            "_2":23544,
            "_3":-2510,
            "_4":false
          },
          {  
            "_1":63,
            "_2":27548,
            "_3":24067,
            "_4":false
          },
          {  
            "_1":64,
            "_2":27747,
            "_3":24487,
            "_4":false
          },
          {  
            "_1":14,
            "_2":23702,
            "_3":-21036,
            "_4":false
          },
          {  
            "_1":10,
            "_2":-3609,
            "_3":23995,
            "_4":false
          },
          {  
            "_1":66,
            "_2":21647,
            "_3":25140,
            "_4":false
          },
          {  
            "_1":74,
            "_2":14280,
            "_3":11558,
            "_4":false
          },
          {  
            "_1":53,
            "_2":10154,
            "_3":2926,
            "_4":false
          },
          {  
            "_1":54,
            "_2":10299,
            "_3":3272,
            "_4":false
          },
          {  
            "_1":67,
            "_2":18193,
            "_3":15224,
            "_4":false
          },
          {  
            "_1":16,
            "_2":34293,
            "_3":5745,
            "_4":false
          },
          {  
            "_1":61,
            "_2":22430,
            "_3":32950,
            "_4":false
          },
          {  
            "_1":49,
            "_2":23245,
            "_3":-2213,
            "_4":false
          },
          {  
            "_1":69,
            "_2":12693,
            "_3":20771,
            "_4":false
          },
          {  
            "_1":58,
            "_2":13485,
            "_3":11975,
            "_4":false
          },
          {  
            "_1":73,
            "_2":14175,
            "_3":11133,
            "_4":false
          },
          {  
            "_1":62,
            "_2":22120,
            "_3":33477,
            "_4":false
          },
          {  
            "_1":13,
            "_2":23601,
            "_3":-21027,
            "_4":false
          },
          {  
            "_1":28,
            "_2":27204,
            "_3":18804,
            "_4":false
          },
          {  
            "_1":52,
            "_2":2218,
            "_3":33105,
            "_4":true
          },
          {  
            "_1":24,
            "_2":20168,
            "_3":6305,
            "_4":false
          },
          {  
            "_1":71,
            "_2":4415,
            "_3":32685,
            "_4":false
          },
          {  
            "_1":19,
            "_2":2009,
            "_3":33967,
            "_4":true
          },
          {  
            "_1":59,
            "_2":27023,
            "_3":18113,
            "_4":false
          }
        ],
        "noteId":"2CBK1CKF2",
        "paragraphId":"20170312-102218_1864970106"
      },
      {  
        "name":"stream",
        "object":{  
          "_1":974062,
          "_2":2758672,
          "_3":974062,
          "_4":2758672,
          "_5":10804676406165368
        },
        "noteId":"2CBK1CKF2",
        "paragraphId":"20160821-114515_1240706007"
      },
      {  
        "name":"content",
        "object":"10 items/s",
        "noteId":"2CBK1CKF2",
        "paragraphId":"20161010-091903_1435461225"
      },
      {  
        "name":"content",
        "object":"13270 items/s",
        "noteId":"2CBK1CKF2",
        "paragraphId":"20161017-084811_339888826"
      }
    ],
    "2CCSRKAHT:shared_process":[  

    ],
    "2CCBYAZEC:shared_process":[  

    ],
    "2CAQ11TT5:shared_process":[  

    ],
    "2CAHTU896:shared_process":[  

    ],
    "2CAVWA7JW:shared_process":[  

    ],
    "2CBB5Y87P:shared_process":[  

    ],
    "2CAJTCY1K:shared_process":[  

    ],
    "2CC8BHQ2Z:shared_process":[  

    ],
    "2CBTNR89U:shared_process":[  

    ],
    "2CD7ZFQVU:shared_process":[  

    ],
    "2CD2PVUCS:shared_process":[  

    ],
    "2CCQQQJSC:shared_process":[  

    ],
    "2CCEZJ1K2:shared_process":[  

    ],
    "2CDGXG1P9:shared_process":[  

    ],
    "2CDEKZ3T3:shared_process":[  

    ]
  },
  "config":{  
    "looknfeel":"default"
  },
  "info":{  

  }
}